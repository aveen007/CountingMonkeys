[section ram, code]
	init CodeEnd
	jump main
vtable_ExampleClass:
    dd ExampleClass_DoThing
    dd ExampleClass_ShowMessage
vtable_Example:
    dd Example_DoThing
ExampleClass_ShowMessage:
	push 0
	push 2
	push 0
	push 2
	pop_sf
	pop_sf
	call fib
	ret
ExampleClass_DoThing:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	add_s 0
	load
	sub_s 1
	load
	pop_sf
	pop_sf
	call fib
	ret
Example_DoThing:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	add_s 0
	load
	sub_s 1
	load
	pop_sf
	pop_sf
	call fib
	ret
fib:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push_hf
	pop_vtable vtable_Example
	pop_hf
	pop_hf
	pop_hf
	pop_hf
	add_s 1
	wide_store
	push_hf
	pop_vtable vtable_ExampleClass
	pop_hf
	pop_hf
	add_s 2
	wide_store
	push 0
	push 2
	add_s 3
	wide_store
	push 5
	push 2
	add_s 1
	load
	add_mem_imm 0
	wide_store
	add_s 1
	load
	add_mem_imm 0
	load
	add_s 3
	wide_store
	add_s 3
	load
	ret
printf:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 2
	wide_store
	push 0
	push 2
	add_s 3
	wide_store
	push 10
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 2
	wide_store
		;while
label_8:
	push 0
	push 2
	sub_s 1
	load
	wide_sub
	pop
	jz label_10
	push 1
		;false branch
	jump label_11
label_10:
	push 0
		;true branch
label_11:
	jz label_12
		;while body
	push 10
	push 2
	add_s 2
	load
	wide_mult
	add_s 2
	wide_store
	push 10
	push 2
	sub_s 1
	load
	wide_mod
	add_s 3
	wide_store
	add_s 3
	load
	add_s 2
	load
	wide_add
	add_s 2
	wide_store
	push 10
	push 2
	sub_s 1
	load
	wide_div
	sub_s 1
	wide_store
	jump label_8
label_12:
		;end while
		;while
label_16:
	push 0
	push 2
	add_s 2
	load
	wide_sub
	pop
	jz label_18
	push 1
		;false branch
	jump label_19
label_18:
	push 0
		;true branch
label_19:
	jz label_20
		;while body
	push 10
	push 2
	add_s 2
	load
	wide_mod
	add_s 3
	wide_store
	push 48
	push 2
	add_s 3
	load
	wide_add
	add_s 3
	wide_store
	add_s 3
	load
	pop
	write
	push 10
	push 2
	add_s 2
	load
	wide_div
	add_s 2
	wide_store
	jump label_16
label_20:
		;end while
	push 10
	push 2
	pop
	write
	ret
main:
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 1
	wide_store
		;while
label_26:
	push 11
	push 2
	add_s 1
	load
	wide_sub
	pop
	jlt label_28
	push 0
		;false branch
	jump label_29
label_28:
	push 1
		;true branch
label_29:
	jz label_30
		;while body
	add_s 1
	load
	pop_sf
	pop_sf
	call fib
	pop_sf
	pop_sf
	call printf
	push 1
	push 2
	add_s 1
	load
	wide_add
	add_s 1
	wide_store
	jump label_26
label_30:
		;end while
	jump halt
halt:
	hlt
CodeEnd:
