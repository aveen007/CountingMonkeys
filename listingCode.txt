[section ram, code]
	init CodeEnd
	jump main
fib:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 2
	store label_0
	push label_0
	add_s 1
	wide_store
	push 2
	store label_1
	push label_1
	add_s 2
	wide_store
	push 2
	store label_2
	push label_2
	add_s 3
	wide_store
	push 2
	store label_3
	push label_3
	add_s 4
	wide_store
	push label_4
	sub_s 1
	wide_sub
	pop
	jlt label_5
	push 0
		;false branch
	jump label_6
label_5:
	push 1
		;true branch
label_6:
		;if
	jz label_7
		;then
	push label_8
	add_s 1
	wide_store
	jump label_7
label_7:
	push label_9
	sub_s 1
	wide_sub
	pop
	jge label_10
	push 0
		;false branch
	jump label_11
label_10:
	push 1
		;true branch
label_11:
		;if
	jz label_12
		;then
	push label_13
	sub_s 1
	wide_sub
	store label_14.type
	store label_14.value
	push label_14
	pop_sf
	pop_sf
	call fib
	add_s 4
	wide_store
	push label_15
	sub_s 1
	wide_sub
	store label_16.type
	store label_16.value
	push label_16
	pop_sf
	pop_sf
	call fib
	add_s 3
	wide_store
	add_s 3
	add_s 4
	wide_add
	store label_17.type
	store label_17.value
	push label_17
	add_s 1
	wide_store
	jump label_12
label_12:
	add_s 1
		;endif
		;endif
	push label_18
	wide_store
	push label_18
	ret
printf:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 2
	store label_19
	push label_19
	add_s 1
	wide_store
	push 2
	store label_20
	push label_20
	add_s 2
	wide_store
	push 2
	store label_21
	push label_21
	add_s 3
	wide_store
	push label_22
	add_s 1
	wide_store
	push label_23
	add_s 2
	wide_store
		;while
label_24:
	push label_25
	sub_s 1
	wide_sub
	pop
	jz label_26
	push 1
		;false branch
	jump label_27
label_26:
	push 0
		;true branch
label_27:
	jz label_28
		;while body
	push label_29
	add_s 2
	wide_mult
	store label_30.type
	store label_30.value
	push label_30
	add_s 2
	wide_store
	push label_31
	sub_s 1
	wide_mod
	store label_32.type
	store label_32.value
	push label_32
	add_s 3
	wide_store
	add_s 3
	add_s 3
	wide_store
	add_s 3
	add_s 2
	wide_add
	store label_33.type
	store label_33.value
	push label_33
	add_s 2
	wide_store
	push label_34
	sub_s 1
	wide_div
	store label_35.type
	store label_35.value
	push label_35
	sub_s 1
	wide_store
	jump label_24
label_28:
		;end while
		;while
label_36:
	push label_37
	add_s 2
	wide_sub
	pop
	jz label_38
	push 1
		;false branch
	jump label_39
label_38:
	push 0
		;true branch
label_39:
	jz label_40
		;while body
	push label_41
	add_s 2
	wide_mod
	store label_42.type
	store label_42.value
	push label_42
	add_s 3
	wide_store
	push label_43
	add_s 3
	wide_add
	store label_44.type
	store label_44.value
	push label_44
	add_s 3
	wide_store
	add_s 3
	write
	push label_45
	add_s 2
	wide_div
	store label_46.type
	store label_46.value
	push label_46
	add_s 2
	wide_store
	jump label_36
label_40:
		;end while
	push label_47
	write
	push label_48
	wide_store
	push label_48
	ret
main:
	pop_sf
	pop_sf
	push 2
	store label_49
	push label_49
	add_s 1
	wide_store
	push label_50
	add_s 1
	wide_store
		;while
label_51:
	push label_52
	add_s 1
	wide_sub
	pop
	jlt label_53
	push 0
		;false branch
	jump label_54
label_53:
	push 1
		;true branch
label_54:
	jz label_55
		;while body
	add_s 1
	pop_sf
	pop_sf
	call fib
	pop_sf
	pop_sf
	call printf
	push label_56
	add_s 1
	wide_add
	store label_57.type
	store label_57.value
	push label_57
	add_s 1
	wide_store
	jump label_51
label_55:
		;end while
	jump halt
label_0: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_1: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_2: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_3: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_4:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 2 ; Offset for `value`
label_8:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 1 ; Offset for `value`
label_9:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 2 ; Offset for `value`
label_13:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 1 ; Offset for `value`
label_14: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_15:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 2 ; Offset for `value`
label_16: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_17: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_18: 
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_19: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_20: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_21: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_22:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_23:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_25:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_29:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_30: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_31:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_32: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_33: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_34:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_35: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_37:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_41:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_42: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_43:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 48 ; Offset for `value`
label_44: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_45:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_46: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_47:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_48: 
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_49: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_50:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_52:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 11 ; Offset for `value`
label_56:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 1 ; Offset for `value`
label_57: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
halt:
	hlt
CodeEnd:
