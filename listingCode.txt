[section ram, code]
	init CodeEnd
	jump main
vtable_ExampleClass:
    dd ExampleClass_DoThing
    dd ExampleClass_ShowMessage
vtable_Example:
    dd Example_DoThing
ExampleClass_ShowMessage:
	push 0
	push 2
	push 0
	push 2
	pop_sf
	pop_sf
	call fib
	ret
ExampleClass_DoThing:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	add_s 0
	load
	sub_s 1
	load
	pop_sf
	pop_sf
	call fib
	ret
Example_DoThing:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	add_s 0
	load
	sub_s 1
	load
	pop_sf
	pop_sf
	call fib
	ret
fib:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push_hf
	pop_vtable vtable_Example
	pop_hf
	pop_hf
	pop_hf
	pop_hf
	add_s 1
	wide_store
	push_hf
	pop_vtable vtable_ExampleClass
	pop_hf
	pop_hf
	add_s 2
	wide_store
	push 0
	push 2
	add_s 3
	wide_store
	push 0
	push 2
	add_s 4
	wide_store
	push 0
	push 2
	add_s 5
	wide_store
	push 0
	push 2
	add_s 6
	wide_store
	push 0
	push 2
	add_s 7
	wide_store
	push 1
	push 2
	add_s 1
	load
	add_mem_imm 0
	wide_store
	push 2
	push 2
	sub_s 1
	load
	wide_sub
	pop
	jlt label_7
	push 0
		;false branch
	jump label_8
label_7:
	push 1
		;true branch
label_8:
		;if
	jz label_9
		;then
	push 1
	push 2
	add_s 4
	wide_store
	jump label_9
label_9:
	push 2
	push 2
	sub_s 1
	load
	wide_sub
	pop
	jge label_12
	push 0
		;false branch
	jump label_13
label_12:
	push 1
		;true branch
label_13:
		;if
	jz label_14
		;then
	push 1
	push 2
	sub_s 1
	load
	wide_sub
	pop_sf
	pop_sf
	call fib
	push 2
	push 2
	sub_s 1
	load
	wide_sub
	pop_sf
	pop_sf
	call fib
	wide_add
	add_s 4
	wide_store
	jump label_14
label_14:
	add_s 4
	load
		;endif
		;endif
	ret
printf:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 2
	wide_store
	push 0
	push 2
	add_s 3
	wide_store
	push 10
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 2
	wide_store
		;while
label_21:
	push 0
	push 2
	sub_s 1
	load
	wide_sub
	pop
	jz label_23
	push 1
		;false branch
	jump label_24
label_23:
	push 0
		;true branch
label_24:
	jz label_25
		;while body
	push 10
	push 2
	add_s 2
	load
	wide_mult
	add_s 2
	wide_store
	push 10
	push 2
	sub_s 1
	load
	wide_mod
	add_s 3
	wide_store
	add_s 3
	load
	add_s 2
	load
	wide_add
	add_s 2
	wide_store
	push 10
	push 2
	sub_s 1
	load
	wide_div
	sub_s 1
	wide_store
	jump label_21
label_25:
		;end while
		;while
label_29:
	push 0
	push 2
	add_s 2
	load
	wide_sub
	pop
	jz label_31
	push 1
		;false branch
	jump label_32
label_31:
	push 0
		;true branch
label_32:
	jz label_33
		;while body
	push 10
	push 2
	add_s 2
	load
	wide_mod
	add_s 3
	wide_store
	push 48
	push 2
	add_s 3
	load
	wide_add
	add_s 3
	wide_store
	add_s 3
	load
	pop
	write
	push 10
	push 2
	add_s 2
	load
	wide_div
	add_s 2
	wide_store
	jump label_29
label_33:
		;end while
	push 10
	push 2
	pop
	write
	ret
main:
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 1
	wide_store
		;while
label_39:
	push 11
	push 2
	add_s 1
	load
	wide_sub
	pop
	jlt label_41
	push 0
		;false branch
	jump label_42
label_41:
	push 1
		;true branch
label_42:
	jz label_43
		;while body
	add_s 1
	load
	pop_sf
	pop_sf
	call fib
	pop_sf
	pop_sf
	call printf
	push 1
	push 2
	add_s 1
	load
	wide_add
	add_s 1
	wide_store
	jump label_39
label_43:
		;end while
	jump halt
halt:
	hlt
CodeEnd:
