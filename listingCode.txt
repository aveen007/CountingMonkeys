[section ram, code]
	init CodeEnd
	jump main
ShowMessage:
	push 0
	push 2
	push 0
	push 2
	pop_sf
	pop_sf
	call fib
	ret
DoThing:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	add_s 0
	load
	sub_s 1
	load
	pop_sf
	pop_sf
	call fib
	ret
fib:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 2
	wide_store
	push 0
	push 2
	add_s 3
	wide_store
	push 0
	push 2
	add_s 4
	wide_store
	push 2
	push 2
	sub_s 1
	load
	wide_sub
	pop
	jlt label_5
	push 0
		;false branch
	jump label_6
label_5:
	push 1
		;true branch
label_6:
		;if
	jz label_7
		;then
	push 1
	push 2
	add_s 1
	wide_store
	jump label_7
label_7:
	push 2
	push 2
	sub_s 1
	load
	wide_sub
	pop
	jge label_10
	push 0
		;false branch
	jump label_11
label_10:
	push 1
		;true branch
label_11:
		;if
	jz label_12
		;then
	push 1
	push 2
	sub_s 1
	load
	wide_sub
	pop_sf
	pop_sf
	call fib
	push 2
	push 2
	sub_s 1
	load
	wide_sub
	pop_sf
	pop_sf
	call fib
	wide_add
	add_s 1
	wide_store
	jump label_12
label_12:
	add_s 1
	load
		;endif
		;endif
	ret
printf:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 2
	wide_store
	push 0
	push 2
	add_s 3
	wide_store
	push 10
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 2
	wide_store
		;while
label_19:
	push 0
	push 2
	sub_s 1
	load
	wide_sub
	pop
	jz label_21
	push 1
		;false branch
	jump label_22
label_21:
	push 0
		;true branch
label_22:
	jz label_23
		;while body
	push 10
	push 2
	add_s 2
	load
	wide_mult
	add_s 2
	wide_store
	push 10
	push 2
	sub_s 1
	load
	wide_mod
	add_s 3
	wide_store
	add_s 3
	load
	add_s 2
	load
	wide_add
	add_s 2
	wide_store
	push 10
	push 2
	sub_s 1
	load
	wide_div
	sub_s 1
	wide_store
	jump label_19
label_23:
		;end while
		;while
label_27:
	push 0
	push 2
	add_s 2
	load
	wide_sub
	pop
	jz label_29
	push 1
		;false branch
	jump label_30
label_29:
	push 0
		;true branch
label_30:
	jz label_31
		;while body
	push 10
	push 2
	add_s 2
	load
	wide_mod
	add_s 3
	wide_store
	push 48
	push 2
	add_s 3
	load
	wide_add
	add_s 3
	wide_store
	add_s 3
	load
	pop
	write
	push 10
	push 2
	add_s 2
	load
	wide_div
	add_s 2
	wide_store
	jump label_27
label_31:
		;end while
	push 10
	push 2
	pop
	write
	ret
main:
	pop_sf
	pop_sf
	push 0
	push 2
	add_s 1
	wide_store
	push 0
	push 2
	add_s 1
	wide_store
		;while
label_37:
	push 11
	push 2
	add_s 1
	load
	wide_sub
	pop
	jlt label_39
	push 0
		;false branch
	jump label_40
label_39:
	push 1
		;true branch
label_40:
	jz label_41
		;while body
	add_s 1
	load
	pop_sf
	pop_sf
	call fib
	pop_sf
	pop_sf
	call printf
	push 1
	push 2
	add_s 1
	load
	wide_add
	add_s 1
	wide_store
	jump label_37
label_41:
		;end while
	jump halt
halt:
	hlt
CodeEnd:
