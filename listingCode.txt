[section ram, code]
	init CodeEnd
	jump main
fib:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 2
	store label_0
	push label_0
	add_s 1
	wide_store
	push 2
	store label_1
	push label_1
	add_s 2
	wide_store
	push label_2
	sub_s 1
	wide_sub
	pop
	jlt label_3
	push 0
		;false branch
	jump label_4
label_3:
	push 1
		;true branch
label_4:
		;if
	jz label_5
		;then
	push label_6
	add_s 1
	wide_store
	jump label_5
label_5:
	push label_7
	sub_s 1
	wide_sub
	pop
	jge label_8
	push 0
		;false branch
	jump label_9
label_8:
	push 1
		;true branch
label_9:
		;if
	jz label_10
		;then
	sub_s 1
	add_s 1
	wide_store
	jump label_10
label_10:
	add_s 1
	pop_sf
	pop_sf
	call printf
		;endif
		;endif
	ret
printf:
	sub_s 1
	wide_store
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	pop_sf
	push 2
	store label_11
	push label_11
	add_s 1
	wide_store
	push 2
	store label_12
	push label_12
	add_s 2
	wide_store
	push 2
	store label_13
	push label_13
	add_s 3
	wide_store
	push label_14
	add_s 1
	wide_store
	push label_15
	add_s 2
	wide_store
		;while
label_16:
	push label_17
	sub_s 1
	wide_sub
	pop
	jz label_18
	push 1
		;false branch
	jump label_19
label_18:
	push 0
		;true branch
label_19:
	jz label_20
		;while body
	push label_21
	add_s 2
	wide_mult
	store label_22.type
	store label_22.value
	push label_22
	add_s 2
	wide_store
	push label_23
	sub_s 1
	wide_mod
	store label_24.type
	store label_24.value
	push label_24
	add_s 3
	wide_store
	add_s 3
	add_s 3
	wide_store
	add_s 3
	add_s 2
	wide_add
	store label_25.type
	store label_25.value
	push label_25
	add_s 2
	wide_store
	push label_26
	sub_s 1
	wide_div
	store label_27.type
	store label_27.value
	push label_27
	sub_s 1
	wide_store
	jump label_16
label_20:
		;end while
		;while
label_28:
	push label_29
	add_s 2
	wide_sub
	pop
	jz label_30
	push 1
		;false branch
	jump label_31
label_30:
	push 0
		;true branch
label_31:
	jz label_32
		;while body
	push label_33
	add_s 2
	wide_mod
	store label_34.type
	store label_34.value
	push label_34
	add_s 3
	wide_store
	push label_35
	add_s 3
	wide_add
	store label_36.type
	store label_36.value
	push label_36
	add_s 3
	wide_store
	add_s 3
	write
	push label_37
	add_s 2
	wide_div
	store label_38.type
	store label_38.value
	push label_38
	add_s 2
	wide_store
	jump label_28
label_32:
		;end while
	ret
main:
	pop_sf
	pop_sf
	push 2
	store label_39
	push label_39
	add_s 1
	wide_store
	push label_40
	add_s 1
	wide_store
	push label_41
	pop_sf
	pop_sf
	call fib
	push label_42
	pop_sf
	pop_sf
	call fib
	push label_43
	pop_sf
	pop_sf
	call fib
	jump halt
label_0: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_1: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_2:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 2 ; Offset for `value`
label_6:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 1 ; Offset for `value`
label_7:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 2 ; Offset for `value`
label_11: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_12: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_13: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_14:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_15:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_17:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_21:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_22: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_23:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_24: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_25: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_26:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_27: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_29:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_33:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_34: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_35:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 48 ; Offset for `value`
label_36: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_37:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 10 ; Offset for `value`
label_38: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x0 ; Offset for `value`
label_39: 
    .type: dd 0x0 ; Offset for `type`
    .value: dd 0x10 ; Offset for `value`
label_40:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 0 ; Offset for `value`
label_41:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 1 ; Offset for `value`
label_42:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 2 ; Offset for `value`
label_43:  
    .type: dd 0x2 ; Offset for `type`
    .value: dd 3 ; Offset for `value`
halt:
	hlt
CodeEnd:
