<?xml version="1.0" encoding="utf-8"?>
<DirectedGraph xsd="http://www.w3.org/2001/XMLSchema" xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/vs/2009/dgml">
  <Nodes>
    <Node Id="01b34e96-15d3-47db-b5c1-875076a9c707" Bounds="129.155,981.84,54.87,57.8800000000001" Label="#0:&#xD;&#xA;&#xD;&#xA;return;" />
    <Node Id="148bab22-5442-4e69-bede-78e255ac0bc5" Bounds="341.23500000341,678.599963378906,174.3,169.6" Label=" :  { &#xD;&#xA; AddressSize : 15&#xD;&#xA; CellSize : 16&#xD;&#xA; End : 65535&#xD;&#xA; Endianness : LittleEndian = 1&#xD;&#xA; Granularity : 2&#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;ram&quot;&#xD;&#xA; Start : 0&#xD;&#xA;}" />
    <Node Id="16a0d448-1a06-42ea-9167-b182b192ff62" Bounds="355.143333333333,0,322.563333333333,329.2" Label="instruction iadd :  { &#xD;&#xA; Bytes : 00100000&#xD;&#xA; DefinitionName :  &quot;iadd&quot;&#xD;&#xA; DescribingMnemonic :  &quot;MnemonicSignatureInfo[ iadd ]&quot;&#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;iadd&quot;&#xD;&#xA;} :  &quot;MnemonicSignatureInfo[ iadd ]&quot; { &#xD;&#xA; Arguments :  Count = 0 { &#xD;&#xA; &#xD;&#xA; }&#xD;&#xA; Format :  &quot;MnemonicFormat[ {0} iadd ]&quot; { &#xD;&#xA;  Format :  &quot;iadd&quot;, Length = 4&#xD;&#xA;  FullFormat :  &quot;{0} iadd&quot;, Length = 8&#xD;&#xA; }&#xD;&#xA; IsFrozen : False&#xD;&#xA; Mnemonic :  { &#xD;&#xA;  IsFrozen : True&#xD;&#xA;  Name :  &quot;iadd&quot;, Length = 4&#xD;&#xA; }&#xD;&#xA;}" />
    <Node Id="1925b276-bc2d-4a4a-9971-c967555bac06" Bounds="707.706666666667,0,322.563333333333,329.2" Label="instruction ladd :  { &#xD;&#xA; Bytes : 00110000&#xD;&#xA; DefinitionName :  &quot;ladd&quot;&#xD;&#xA; DescribingMnemonic :  &quot;MnemonicSignatureInfo[ ladd ]&quot;&#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;ladd&quot;&#xD;&#xA;} :  &quot;MnemonicSignatureInfo[ ladd ]&quot; { &#xD;&#xA; Arguments :  Count = 0 { &#xD;&#xA; &#xD;&#xA; }&#xD;&#xA; Format :  &quot;MnemonicFormat[ {0} iadd ]&quot; { &#xD;&#xA;  Format :  &quot;iadd&quot;, Length = 4&#xD;&#xA;  FullFormat :  &quot;{0} iadd&quot;, Length = 8&#xD;&#xA; }&#xD;&#xA; IsFrozen : False&#xD;&#xA; Mnemonic :  { &#xD;&#xA;  IsFrozen : True&#xD;&#xA;  Name :  &quot;ladd&quot;, Length = 4&#xD;&#xA; }&#xD;&#xA;}" />
    <Node Id="44ebd952-7948-4def-aa6c-70753096a178" Bounds="46.1483333333334,518.8,232.846666666667,73.84" Label="#0:&#xD;&#xA;write$m_stack:2[read$sp()](read$value())&#xD;&#xA;write$sp(Sub$(read$sp(), const$(1)))&#xD;&#xA;write$ip(Sum$(read$ip(), const$(3)))" />
    <Node Id="4b400ca0-c57d-47ed-a747-23149961cc07" Bounds="603.35,622.64,63.96,25.96" Label="memory" />
    <Node Id="62608047-2654-4988-87b8-486e2278be3b" Bounds="-1.94499999658987,622.640070446777,313.18,329.2" Label="instruction hlt :  { &#xD;&#xA; Bytes : 11111111&#xD;&#xA; DefinitionName :  &quot;hlt&quot;&#xD;&#xA; DescribingMnemonic :  &quot;MnemonicSignatureInfo[ hlt ]&quot;&#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;hlt&quot;&#xD;&#xA;} :  &quot;MnemonicSignatureInfo[ hlt ]&quot; { &#xD;&#xA; Arguments :  Count = 0 { &#xD;&#xA; &#xD;&#xA; }&#xD;&#xA; Format :  &quot;MnemonicFormat[ {0} hlt ]&quot; { &#xD;&#xA;  Format :  &quot;hlt&quot;, Length = 3&#xD;&#xA;  FullFormat :  &quot;{0} hlt&quot;, Length = 7&#xD;&#xA; }&#xD;&#xA; IsFrozen : False&#xD;&#xA; Mnemonic :  { &#xD;&#xA;  IsFrozen : True&#xD;&#xA;  Name :  &quot;hlt&quot;, Length = 3&#xD;&#xA; }&#xD;&#xA;}" />
    <Node Id="68ccdfb6-f0cf-425a-8bf8-0911d81565fa" Bounds="1207.21333333333,622.64,65.1266666666666,25.96" Label="registers" />
    <Node Id="7208b3ca-61c6-4e89-8ce0-f6e19a7a72d3" Bounds="545.53500000341,678.600054931641,174.3,169.6" Label=" :  { &#xD;&#xA; AddressSize : 12&#xD;&#xA; CellSize : 16&#xD;&#xA; End : 8191&#xD;&#xA; Endianness : LittleEndian = 1&#xD;&#xA; Granularity : 2&#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;m_stack&quot;&#xD;&#xA; Start : 4096&#xD;&#xA;}" />
    <Node Id="7b972921-e554-4408-ab51-d873a49dfea0" Bounds="746.888333333333,359.2,244.2,153.64" Label="#0:&#xD;&#xA;write$sp(Sum$(read$sp(), const$(1)))&#xD;&#xA;write$inp(read$m_stack:2[read$sp()]())&#xD;&#xA;write$sp(Sum$(read$sp(), const$(1)))&#xD;&#xA;write$outp(read$m_stack:2[read$sp()]())&#xD;&#xA;write$outp(Sum$(read$inp(), read$outp()))&#xD;&#xA;write$m_stack:2[read$sp()](read$outp())&#xD;&#xA;write$sp(Sub$(read$sp(), const$(1)))&#xD;&#xA;write$ip(Sum$(read$ip(), const$(1)))" />
    <Node Id="7be60cc7-4b6f-4200-a0a3-69ef98b69cad" Bounds="749.83500000341,678.6,173.88,89.8000000000002" Label="storage  :  &quot;storage sp [16]&quot; { &#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;sp&quot;&#xD;&#xA; Size : 16&#xD;&#xA;}" />
    <Node Id="9bb6436f-ac46-4536-8b21-128607bd3d25" Bounds="1104.02610351562,358.429764050293,229.96,73.84" Label="#0:&#xD;&#xA;write$sp(Sum$(read$sp(), const$(1)))&#xD;&#xA;write$outp(read$m_stack:2[read$sp()]())&#xD;&#xA;write$ip(Sum$(read$ip(), const$(1)))" UseManualLocation="True" />
    <Node Id="9d5a9080-11c0-4238-9673-44a8d84d2963" Bounds="0,0,325.143333333333,488.8" Label="instruction push :  { &#xD;&#xA; Bytes :  &quot;0000????:????????:????0000&quot;&#xD;&#xA; DefinitionName :  &quot;push&quot;&#xD;&#xA; DescribingMnemonic :  &quot;MnemonicSignatureInfo[ push ]&quot;&#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;push&quot;&#xD;&#xA;} :  &quot;MnemonicSignatureInfo[ push ]&quot; { &#xD;&#xA; Arguments :  Count = 1 { &#xD;&#xA;  (0) MnemonicArgumentInfo :  { &#xD;&#xA;   InstructionArgument :  { &#xD;&#xA;    BitIndex : 4&#xD;&#xA;    Flags : Unsigned = 0&#xD;&#xA;    IsFrozen : True&#xD;&#xA;    Length : 16&#xD;&#xA;    Name :  &quot;value&quot;, Length = 5&#xD;&#xA;   }&#xD;&#xA;   IsFixed : False&#xD;&#xA;   Name :  &quot;value&quot;, Length = 5&#xD;&#xA;  }&#xD;&#xA; }&#xD;&#xA; Format :  &quot;MnemonicFormat[ {0} push {1} ]&quot; { &#xD;&#xA;  Format :  &quot;push {1}&quot;, Length = 8&#xD;&#xA;  FullFormat :  &quot;{0} push {1}&quot;, Length = 12&#xD;&#xA; }&#xD;&#xA; IsFrozen : False&#xD;&#xA; Mnemonic :  { &#xD;&#xA;  IsFrozen : True&#xD;&#xA;  Name :  &quot;push&quot;, Length = 4&#xD;&#xA; }&#xD;&#xA;}" />
    <Node Id="adadf3ab-8dd2-46f5-a1ca-ba684f472856" Bounds="394.325,359.2,244.2,153.64" Label="#0:&#xD;&#xA;write$sp(Sum$(read$sp(), const$(1)))&#xD;&#xA;write$inp(read$m_stack:2[read$sp()]())&#xD;&#xA;write$sp(Sum$(read$sp(), const$(1)))&#xD;&#xA;write$outp(read$m_stack:2[read$sp()]())&#xD;&#xA;write$outp(Sum$(read$inp(), read$outp()))&#xD;&#xA;write$m_stack:2[read$sp()](read$outp())&#xD;&#xA;write$sp(Sub$(read$sp(), const$(1)))&#xD;&#xA;write$ip(Sum$(read$ip(), const$(1)))" />
    <Node Id="afe186d4-ce85-4922-99c4-67d885b0a37c" Bounds="1363.89166667008,678.599969482422,186.673333333333,89.8000000000002" Label="storage  :  &quot;storage outp [16]&quot; { &#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;outp&quot;&#xD;&#xA; Size : 16&#xD;&#xA;}" />
    <Node Id="d446cfc7-71a3-417a-99c6-51685df2b0a6" Bounds="1060.27002522786,-0.770335949707061,320.553333333333,329.2" Label="instruction pop :  { &#xD;&#xA; Bytes : 00010000&#xD;&#xA; DefinitionName :  &quot;pop&quot;&#xD;&#xA; DescribingMnemonic :  &quot;MnemonicSignatureInfo[ pop ]&quot;&#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;pop&quot;&#xD;&#xA;} :  &quot;MnemonicSignatureInfo[ pop ]&quot; { &#xD;&#xA; Arguments :  Count = 0 { &#xD;&#xA; &#xD;&#xA; }&#xD;&#xA; Format :  &quot;MnemonicFormat[ {0} pop ]&quot; { &#xD;&#xA;  Format :  &quot;pop&quot;, Length = 3&#xD;&#xA;  FullFormat :  &quot;{0} pop&quot;, Length = 7&#xD;&#xA; }&#xD;&#xA; IsFrozen : False&#xD;&#xA; Mnemonic :  { &#xD;&#xA;  IsFrozen : True&#xD;&#xA;  Name :  &quot;pop&quot;, Length = 3&#xD;&#xA; }&#xD;&#xA;}" />
    <Node Id="d7c2885e-49cc-48e2-a78c-9fe31d595daa" Bounds="953.715000003411,678.599969482422,171.693333333334,89.8000000000002" Label="storage  :  &quot;storage ip [16]&quot; { &#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;ip&quot;&#xD;&#xA; Size : 16&#xD;&#xA;}" />
    <Node Id="dfa7ff7a-d5b5-43dc-beba-1f7eeddb5799" Bounds="1155.40833333674,678.600030517578,178.483333333334,89.8000000000002" Label="storage  :  &quot;storage inp [16]&quot; { &#xD;&#xA; IsFrozen : True&#xD;&#xA; Name :  &quot;inp&quot;&#xD;&#xA; Size : 16&#xD;&#xA;}" />
  </Nodes>
  <Links>
    <Link Source="16a0d448-1a06-42ea-9167-b182b192ff62" Target="adadf3ab-8dd2-46f5-a1ca-ba684f472856" Bounds="516.424987792969,329.200012207031,0,21" />
    <Link Source="1925b276-bc2d-4a4a-9971-c967555bac06" Target="7b972921-e554-4408-ab51-d873a49dfea0" Bounds="868.988342285156,329.200012207031,0,21" />
    <Link Source="4b400ca0-c57d-47ed-a747-23149961cc07" Target="148bab22-5442-4e69-bede-78e255ac0bc5" Bounds="522.325988769531,646.116821289063,81.06884765625,34.0659790039063" />
    <Link Source="4b400ca0-c57d-47ed-a747-23149961cc07" Target="7208b3ca-61c6-4e89-8ce0-f6e19a7a72d3" Bounds="634.626576033071,648.600025634766,0.434730637862685,21.0019567949578" />
    <Link Source="62608047-2654-4988-87b8-486e2278be3b" Target="01b34e96-15d3-47db-b5c1-875076a9c707" Bounds="156.077165403065,951.840070446777,0.182722384467553,21.000440654828" />
    <Link Source="68ccdfb6-f0cf-425a-8bf8-0911d81565fa" Target="7be60cc7-4b6f-4200-a0a3-69ef98b69cad" Bounds="924.049743652344,639.116149902344,283.163635253906,35.511962890625" />
    <Link Source="68ccdfb6-f0cf-425a-8bf8-0911d81565fa" Target="afe186d4-ce85-4922-99c4-67d885b0a37c" Bounds="1270.86464167085,648.183757674886,84.6826874838328,34.223293013522" />
    <Link Source="68ccdfb6-f0cf-425a-8bf8-0911d81565fa" Target="d7c2885e-49cc-48e2-a78c-9fe31d595daa" Bounds="1133.6494228022,648.600013006241,76.555272609753,33.6022316807697" />
    <Link Source="68ccdfb6-f0cf-425a-8bf8-0911d81565fa" Target="dfa7ff7a-d5b5-43dc-beba-1f7eeddb5799" Bounds="1240.49652171225,648.600025634766,1.16529241972057,21.0138110298404" />
    <Link Source="9d5a9080-11c0-4238-9673-44a8d84d2963" Target="44ebd952-7948-4def-aa6c-70753096a178" Bounds="162.571670532227,488.799987792969,0,21" />
    <Link Source="d446cfc7-71a3-417a-99c6-51685df2b0a6" Target="9bb6436f-ac46-4536-8b21-128607bd3d25" Bounds="1219.31166450752,328.429664050293,0.139740856085382,21.0002992479785" />
  </Links>
  <Properties>
    <Property Id="Bounds" DataType="System.Windows.Rect" />
    <Property Id="Label" Label="Label" Description="Displayable label of an Annotatable object" DataType="System.String" />
    <Property Id="UseManualLocation" DataType="System.Boolean" />
    <Property Id="xsd" DataType="System.String" />
    <Property Id="xsi" DataType="System.String" />
  </Properties>
</DirectedGraph>