digraph G {
ordering=out;
ranksep=.4;
bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

edge [arrowsize=.5, color="black", style="bold"]    n000011CED78A58A0 [label="BaseBlock\n OT: [ =( 2 ,  sum)]
OT: [ =( 0 ,  i)]
OT: [ processWhile( 1 ,  2)]
"]
    n000011CED78A5900 [label="IfBlock\n OT: [ <( -( 9) ,  i)]
"]
    n000011CED78A58A0 -> n000011CED78A5900
    n000011CED78A5900 -> n000011CED78A5960 [label="True" color="green"]
    n000011CED78A5960 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A5D20 [label="IfExitBlock\n "]
    n000011CED78A5960 -> n000011CED78A5D20
    n000011CED78A5D80 [label="IfBlock\n OT: [ >( 0 ,  i)]
"]
    n000011CED78A5D20 -> n000011CED78A5D80
    n000011CED78A5D80 -> n000011CED78A5DE0 [label="True" color="green"]
    n000011CED78A5DE0 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A5E40 [label="IfExitBlock\n "]
    n000011CED78A5DE0 -> n000011CED78A5E40
    n000011CED78A5EA0 [label="IfBlock\n OT: [ >( 0 ,  i)]
"]
    n000011CED78A5E40 -> n000011CED78A5EA0
    n000011CED78A5EA0 -> n000011CED78A5F00 [label="True" color="green"]
    n000011CED78A5F00 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A5F60 [label="IfExitBlock\n "]
    n000011CED78A5F00 -> n000011CED78A5F60
    n000011CED78A5FC0 [label="BaseBlock\n "]
    n000011CED78A5F60 -> n000011CED78A5FC0
    n000011CED78A5900 -> n000011CED78A59C0 [label="True" color="red"]
    n000011CED78A59C0 [label="ElseBlock\n OT: [ =( -( i ,  sum) ,  sum)]
"]
    n000011CED78A5A20 [label="WhileBlock\n OT: [ >( 0 ,  i)]
"]
    n000011CED78A59C0 -> n000011CED78A5A20
	   n000011CED78A5A20 -> n000011CED78A5A80 [ label = "True" color="green"]
    n000011CED78A5A80 [label="WhileBodyBlock\n "]
    n000011CED78A5B40 [label="IfBlock\n OT: [ >=( sum ,  i)]
"]
    n000011CED78A5A80 -> n000011CED78A5B40
    n000011CED78A5B40 -> n000011CED78A5BA0 [label="True" color="green"]
    n000011CED78A5BA0 [label="ThenBlock\n OT: [ =( -( 1 ,  i) ,  i)]
"]
    n000011CED78A5CC0 [label="IfExitBlock\n "]
    n000011CED78A5BA0 -> n000011CED78A5CC0
    n000011CED78A5CC0 -> n000011CED78A5A20
    n000011CED78A5B40 -> n000011CED78A5C00 [label="True" color="red"]
    n000011CED78A5C00 [label="ElseBlock\n OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A5C60 [label="BreakBlock\n "]
    n000011CED78A5C00 -> n000011CED78A5C60
    n000011CED78A5C60 -> n000011CED78A5CC0
	   n000011CED78A5A20 -> n000011CED78A5AE0 [ label = "False" color="red"]
    n000011CED78A5AE0 [label="WhileExitBlock\n "]
    n000011CED78A5AE0 -> n000011CED78A5D20
}
