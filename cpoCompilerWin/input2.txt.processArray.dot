digraph G {
ordering=out;
ranksep=.4;
bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

edge [arrowsize=.5, color="black", style="bold"]    n00001222C27A5A80 [label="BaseBlock\n OT: [ =( 2 ,  sum)]
OT: [ =( 0 ,  i)]
OT: [ processWhile( 1 ,  2)]
"]
    n00001222C27A5AE0 [label="IfBlock\n OT: [ <( 9 ,  i)]
"]
    n00001222C27A5A80 -> n00001222C27A5AE0
    n00001222C27A5AE0 -> n00001222C27A5B40 [label="True" color="green"]
    n00001222C27A5B40 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n00001222C27A5D80 [label="IfExitBlock\n "]
    n00001222C27A5B40 -> n00001222C27A5D80
    n00001222C27A5DE0 [label="IfBlock\n OT: [ >( 0 ,  i)]
"]
    n00001222C27A5D80 -> n00001222C27A5DE0
    n00001222C27A5DE0 -> n00001222C27A5E40 [label="True" color="green"]
    n00001222C27A5E40 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n00001222C27A5EA0 [label="IfExitBlock\n "]
    n00001222C27A5E40 -> n00001222C27A5EA0
    n00001222C27A5F00 [label="IfBlock\n OT: [ >( 0 ,  i)]
"]
    n00001222C27A5EA0 -> n00001222C27A5F00
    n00001222C27A5F00 -> n00001222C27A5F60 [label="True" color="green"]
    n00001222C27A5F60 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n00001222C27A5FC0 [label="IfExitBlock\n "]
    n00001222C27A5F60 -> n00001222C27A5FC0
    n00001222C27A6020 [label="BaseBlock\n "]
    n00001222C27A5FC0 -> n00001222C27A6020
    n00001222C27A5AE0 -> n00001222C27A5BA0 [label="True" color="red"]
    n00001222C27A5BA0 [label="ElseBlock\n OT: [ =( -( i ,  sum) ,  sum)]
"]
    n00001222C27A5C00 [label="WhileBlock\n OT: [ >( 0 ,  i)]
"]
    n00001222C27A5BA0 -> n00001222C27A5C00
	   n00001222C27A5C00 -> n00001222C27A5C60 [ label = "True" color="green"]
    n00001222C27A5C60 [label="WhileBodyBlock\n "]
    n00001222C27A5D20 [label="BreakBlock\n "]
    n00001222C27A5C60 -> n00001222C27A5D20
    n00001222C27A5D20 -> n00001222C27A5C00
	   n00001222C27A5C00 -> n00001222C27A5CC0 [ label = "False" color="red"]
    n00001222C27A5CC0 [label="WhileExitBlock\n "]
    n00001222C27A5CC0 -> n00001222C27A5D80
}
