digraph G {
ordering=out;
ranksep=.4;
bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

edge [arrowsize=.5, color="black", style="bold"]    n000011E4978A9D10 [label="BaseBlock\n OT: [ =( 2 ,  sum)]
OT: [ =( 0 ,  i)]
OT: [ b]
OT: [ c]
OT: [ processAnotherArray( arr)]
"]
    n000011E4978A9E90 [label="WhileBlock\n OT: [ >( 0 ,  i)]
"]
    n000011E4978A9D10 -> n000011E4978A9E90
	   n000011E4978A9E90 -> n000011E4978A9ED0 [ label = "True" color="green"]
    n000011E4978A9ED0 [label="WhileBodyBlock\n "]
    n000011E4978A9F10 [label="IfBlock\n OT: [ >=( sum ,  i)]
"]
    n000011E4978A9ED0 -> n000011E4978A9F10
    n000011E4978A9F10 -> n000011E4978A9F50 [label="True" color="green"]
    n000011E4978A9F50 [label="ThenBlock\n OT: [ =( -( 1 ,  i) ,  i)]
"]
    n000011E4978A9F10 -> n000011E4978A9F90 [label="False" color="red"]
    n000011E4978A9F90 [label="ElseBlock\n OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011E4978A9FD0 [label="BreakBlock\n "]
    n000011E4978A9F90 -> n000011E4978A9FD0
    n000011E4978A9FD0 -> n000011E4978AA010 [color="blue"]
    n000011E4978A9F50 -> n000011E4978AA010 [ color="blue"]
    n000011E4978AA010 [label="IfExitBlock\n "]
    n000011E4978AA010 -> n000011E4978A9E90 [ color="blue"]
	   n000011E4978A9E90 -> n000011E4978AA050 [ label = "False" color="red"]
    n000011E4978AA050 [label="WhileExitBlock\n "]
    n000011E4978AA090 [label="BaseBlock\n "]
    n000011E4978AA050 -> n000011E4978AA090
}
