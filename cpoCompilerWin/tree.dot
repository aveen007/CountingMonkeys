digraph {

	ordering=out;
	ranksep=.4;
	bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
	width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

	edge [arrowsize=.5, color="black", style="bold"]

	n0000124251A39F50[label="Sourcer"]
	n0000124251A39E18[label="Source"]
	n0000124251A28E50[label="FuncDef"]
	n0000124251A01BE0[label="FuncSignature"]
	n0000124251A01D18[label="calculator"]
	n0000124251A01AA8[label="ListArgdef"]
	n0000124251A026D8[label="VarStatement"]
	n0000124251A01F88[label="ListIdentifier"]
	n0000124251A01E50[label="i"]
	n0000124251A020C0[label="sum"]
	n0000124251A021F8[label="tmp1"]
	n0000124251A02330[label="tmp2"]
	n0000124251A02810[label="TypeRef"]
	n0000124251A025A0[label="int"]
	n0000124251A031D0[label="Expression"]
	n0000124251A036B0[label="="]
	n0000124251A03308[label="10"]
	n0000124251A02A80[label="tmp1"]
	n0000124251A03F38[label="Expression"]
	n0000124251A04418[label="="]
	n0000124251A04070[label="0"]
	n0000124251A037E8[label="tmp2"]
	n0000124251A05798[label="Expression"]
	n0000124251A05A08[label="CallOrIndexer"]
	n0000124251A058D0[label="ListExpr"]
	n0000124251A04F10[label="i"]
	n0000124251A04550[label="scan"]
	n0000124251A068A8[label="Expression"]
	n0000124251A06EC0[label="="]
	n0000124251A06D88[label="-"]
	n0000124251A06FF8[label="48"]
	n0000124251A06B18[label="i"]
	n0000124251A05C78[label="sum"]
	n0000124251A084B0[label="Expression"]
	n0000124251A08720[label="CallOrIndexer"]
	n0000124251A085E8[label="ListExpr"]
	n0000124251A07C28[label="i"]
	n0000124251A07268[label="scan"]
	n0000124251A0EB10[label="WhileStatement"]
	n0000124251A0EFF0[label="Expression"]
	n0000124251A09218[label="!="]
	n0000124251A09488[label="32"]
	n0000124251A08990[label="i"]
	n0000124251A0A460[label="Expression"]
	n0000124251A0AA78[label="="]
	n0000124251A0A940[label="-"]
	n0000124251A0ABB0[label="48"]
	n0000124251A0A6D0[label="i"]
	n0000124251A09830[label="tmp1"]
	n0000124251A0BA50[label="Expression"]
	n0000124251A0C068[label="="]
	n0000124251A0BF30[label="*"]
	n0000124251A0C1A0[label="10"]
	n0000124251A0BCC0[label="tmp1"]
	n0000124251A0AE20[label="tmp2"]
	n0000124251A0D040[label="Expression"]
	n0000124251A0D658[label="="]
	n0000124251A0D520[label="+"]
	n0000124251A0D790[label="tmp2"]
	n0000124251A0D2B0[label="sum"]
	n0000124251A0C410[label="sum"]
	n0000124251A0EC48[label="Expression"]
	n0000124251A0EEB8[label="CallOrIndexer"]
	n0000124251A0ED80[label="ListExpr"]
	n0000124251A0E3C0[label="i"]
	n0000124251A0DA00[label="scan"]
	n0000124251A0FAE8[label="VarStatement"]
	n0000124251A0F128[label="ListIdentifier"]
	n0000124251A08FA8[label="i1"]
	n0000124251A0F260[label="sum1"]
	n0000124251A0F398[label="tmp11"]
	n0000124251A0F4D0[label="tmp21"]
	n0000124251A0F608[label="res"]
	n0000124251A0F740[label="x"]
	n0000124251A0FC20[label="TypeRef"]
	n0000124251A0F9B0[label="int"]
	n0000124251A105E0[label="Expression"]
	n0000124251A10AC0[label="="]
	n0000124251A10718[label="10"]
	n0000124251A0FE90[label="tmp11"]
	n0000124251A11348[label="Expression"]
	n0000124251A11828[label="="]
	n0000124251A11480[label="0"]
	n0000124251A10BF8[label="tmp21"]
	n0000124251A12BA8[label="Expression"]
	n0000124251A12E18[label="CallOrIndexer"]
	n0000124251A12CE0[label="ListExpr"]
	n0000124251A12320[label="i1"]
	n0000124251A11960[label="scan"]
	n0000124251A13CB8[label="Expression"]
	n0000124251A142D0[label="="]
	n0000124251A14198[label="-"]
	n0000124251A14408[label="48"]
	n0000124251A13F28[label="i1"]
	n0000124251A13088[label="sum1"]
	n0000124251A158C0[label="Expression"]
	n0000124251A15B30[label="CallOrIndexer"]
	n0000124251A159F8[label="ListExpr"]
	n0000124251A15038[label="i1"]
	n0000124251A14678[label="scan"]
	n0000124251A1BF20[label="WhileStatement"]
	n0000124251A1C400[label="Expression"]
	n0000124251A16628[label="!="]
	n0000124251A16898[label="32"]
	n0000124251A15DA0[label="i1"]
	n0000124251A17870[label="Expression"]
	n0000124251A17E88[label="="]
	n0000124251A17D50[label="-"]
	n0000124251A17FC0[label="48"]
	n0000124251A17AE0[label="i1"]
	n0000124251A16C40[label="tmp11"]
	n0000124251A18E60[label="Expression"]
	n0000124251A19478[label="="]
	n0000124251A19340[label="*"]
	n0000124251A195B0[label="10"]
	n0000124251A190D0[label="tmp11"]
	n0000124251A18230[label="tmp21"]
	n0000124251A1A450[label="Expression"]
	n0000124251A1AA68[label="="]
	n0000124251A1A930[label="+"]
	n0000124251A1ABA0[label="tmp21"]
	n0000124251A1A6C0[label="sum1"]
	n0000124251A19820[label="sum1"]
	n0000124251A1C058[label="Expression"]
	n0000124251A1C2C8[label="CallOrIndexer"]
	n0000124251A1C190[label="ListExpr"]
	n0000124251A1B7D0[label="i1"]
	n0000124251A1AE10[label="scan"]
	n0000124251A1D8B8[label="Expression"]
	n0000124251A1DB28[label="CallOrIndexer"]
	n0000124251A1D9F0[label="ListExpr"]
	n0000124251A1D030[label="x"]
	n0000124251A1C670[label="scan"]
	n0000124251A27860[label="IfStatement"]
	n0000124251A27998[label="Expression"]
	n0000124251A1E620[label="=="]
	n0000124251A1E890[label="43"]
	n0000124251A1DD98[label="x"]
	n0000124251A27AD0[label="ThenStatement"]
	n0000124251A1F868[label="Expression"]
	n0000124251A1FE80[label="="]
	n0000124251A1FD48[label="+"]
	n0000124251A1FFB8[label="sum1"]
	n0000124251A1FAD8[label="sum"]
	n0000124251A1EC38[label="res"]
	n0000124251A20840[label="ElseStatement"]
	n0000124251A274B8[label="IfStatement"]
	n0000124251A275F0[label="Expression"]
	n0000124251A20AB0[label="=="]
	n0000124251A20D20[label="45"]
	n0000124251A20228[label="x"]
	n0000124251A27728[label="ThenStatement"]
	n0000124251A21CF8[label="Expression"]
	n0000124251A22310[label="="]
	n0000124251A221D8[label="-"]
	n0000124251A22448[label="sum1"]
	n0000124251A21F68[label="sum"]
	n0000124251A210C8[label="res"]
	n0000124251A22CD0[label="ElseStatement"]
	n0000124251A27110[label="IfStatement"]
	n0000124251A27248[label="Expression"]
	n0000124251A22F40[label="=="]
	n0000124251A231B0[label="47"]
	n0000124251A226B8[label="x"]
	n0000124251A27380[label="ThenStatement"]
	n0000124251A24188[label="Expression"]
	n0000124251A247A0[label="="]
	n0000124251A24668[label="/"]
	n0000124251A248D8[label="sum1"]
	n0000124251A243F8[label="sum"]
	n0000124251A23558[label="res"]
	n0000124251A25160[label="ElseStatement"]
	n0000124251A264E0[label="IfStatement"]
	n0000124251A26750[label="Expression"]
	n0000124251A253D0[label="=="]
	n0000124251A25640[label="42"]
	n0000124251A24B48[label="x"]
	n0000124251A26FD8[label="ThenStatement"]
	n0000124251A26618[label="Expression"]
	n0000124251A26C30[label="="]
	n0000124251A26AF8[label="*"]
	n0000124251A26D68[label="sum1"]
	n0000124251A26888[label="sum"]
	n0000124251A259E8[label="res"]
	n0000124251A28F88[label="Expression"]
	n0000124251A291F8[label="CallOrIndexer"]
	n0000124251A290C0[label="ListExpr"]
	n0000124251A28700[label="res"]
	n0000124251A27D40[label="print_value"]
	n0000124251A01970[label="end"]
	n0000124251A33B60[label="FuncDef"]
	n0000124251A29810[label="FuncSignature"]
	n0000124251A29948[label="print_value"]
	n0000124251A296D8[label="ListArgdef"]
	n0000124251A29468[label="ArgDef"]
	n0000124251A29330[label="res"]
	n0000124251A2A1D0[label="VarStatement"]
	n0000124251A29BB8[label="ListIdentifier"]
	n0000124251A29A80[label="nextLine"]
	n0000124251A29CF0[label="revertedNum"]
	n0000124251A29E28[label="tmp"]
	n0000124251A2A308[label="TypeRef"]
	n0000124251A2A098[label="int"]
	n0000124251A2ACC8[label="Expression"]
	n0000124251A2B1A8[label="="]
	n0000124251A2AE00[label="10"]
	n0000124251A2A578[label="nextLine"]
	n0000124251A2BA30[label="Expression"]
	n0000124251A2BF10[label="="]
	n0000124251A2BB68[label="0"]
	n0000124251A2B2E0[label="revertedNum"]
	n0000124251A32918[label="WhileStatement"]
	n0000124251A32B88[label="Expression"]
	n0000124251A2C8D0[label="!="]
	n0000124251A2CB40[label="0"]
	n0000124251A2C048[label="res"]
	n0000124251A2DB18[label="Expression"]
	n0000124251A2E130[label="="]
	n0000124251A2DFF8[label="*"]
	n0000124251A2E268[label="10"]
	n0000124251A2DD88[label="revertedNum"]
	n0000124251A2CEE8[label="revertedNum"]
	n0000124251A2F108[label="Expression"]
	n0000124251A2F720[label="="]
	n0000124251A2F5E8[label=""]
	n0000124251A2F858[label="10"]
	n0000124251A2F378[label="res"]
	n0000124251A2E4D8[label="tmp"]
	n0000124251A30218[label="Expression"]
	n0000124251A306F8[label="="]
	n0000124251A30350[label="tmp"]
	n0000124251A2FAC8[label="tmp"]
	n0000124251A31460[label="Expression"]
	n0000124251A31A78[label="="]
	n0000124251A31940[label="+"]
	n0000124251A31BB0[label="tmp"]
	n0000124251A316D0[label="revertedNum"]
	n0000124251A30830[label="revertedNum"]
	n0000124251A32A50[label="Expression"]
	n0000124251A33068[label="="]
	n0000124251A32F30[label="/"]
	n0000124251A331A0[label="10"]
	n0000124251A32CC0[label="res"]
	n0000124251A31E20[label="res"]
	n0000124251A391E8[label="WhileStatement"]
	n0000124251A39458[label="Expression"]
	n0000124251A33DD0[label="!="]
	n0000124251A34040[label="0"]
	n0000124251A33548[label="revertedNum"]
	n0000124251A35018[label="Expression"]
	n0000124251A35630[label="="]
	n0000124251A354F8[label=""]
	n0000124251A35768[label="10"]
	n0000124251A35288[label="revertedNum"]
	n0000124251A343E8[label="tmp"]
	n0000124251A36608[label="Expression"]
	n0000124251A36C20[label="="]
	n0000124251A36AE8[label="+"]
	n0000124251A36D58[label="48"]
	n0000124251A36878[label="tmp"]
	n0000124251A359D8[label="tmp"]
	n0000124251A38210[label="Expression"]
	n0000124251A38480[label="CallOrIndexer"]
	n0000124251A38348[label="ListExpr"]
	n0000124251A37988[label="tmp"]
	n0000124251A36FC8[label="print"]
	n0000124251A39320[label="Expression"]
	n0000124251A39938[label="="]
	n0000124251A39800[label="/"]
	n0000124251A39A70[label="10"]
	n0000124251A39590[label="revertedNum"]
	n0000124251A386F0[label="revertedNum"]
	n0000124251A295A0[label="end"]

		n0000124251A39F50 -> n0000124251A39E18		// Sourcer -> Source
		n0000124251A39E18 -> n0000124251A28E50		// Source -> FuncDef
		n0000124251A28E50 -> n0000124251A01BE0		// FuncDef -> FuncSignature
		n0000124251A01BE0 -> n0000124251A01D18		// FuncSignature -> calculator
		n0000124251A01D18 -> n0000124251A01AA8		// calculator -> ListArgdef
		n0000124251A28E50 -> n0000124251A026D8		// FuncDef -> VarStatement
		n0000124251A026D8 -> n0000124251A01F88		// VarStatement -> ListIdentifier
		n0000124251A01F88 -> n0000124251A01E50		// ListIdentifier -> i
		n0000124251A01F88 -> n0000124251A020C0		// ListIdentifier -> sum
		n0000124251A01F88 -> n0000124251A021F8		// ListIdentifier -> tmp1
		n0000124251A01F88 -> n0000124251A02330		// ListIdentifier -> tmp2
		n0000124251A026D8 -> n0000124251A02810		// VarStatement -> TypeRef
		n0000124251A02810 -> n0000124251A025A0		// TypeRef -> int
		n0000124251A28E50 -> n0000124251A031D0		// FuncDef -> Expression
		n0000124251A031D0 -> n0000124251A036B0		// Expression -> =
		n0000124251A036B0 -> n0000124251A03308		// = -> 10
		n0000124251A036B0 -> n0000124251A02A80		// = -> tmp1
		n0000124251A28E50 -> n0000124251A03F38		// FuncDef -> Expression
		n0000124251A03F38 -> n0000124251A04418		// Expression -> =
		n0000124251A04418 -> n0000124251A04070		// = -> 0
		n0000124251A04418 -> n0000124251A037E8		// = -> tmp2
		n0000124251A28E50 -> n0000124251A05798		// FuncDef -> Expression
		n0000124251A05798 -> n0000124251A05A08		// Expression -> CallOrIndexer
		n0000124251A05A08 -> n0000124251A058D0		// CallOrIndexer -> ListExpr
		n0000124251A058D0 -> n0000124251A04F10		// ListExpr -> i
		n0000124251A05A08 -> n0000124251A04550		// CallOrIndexer -> scan
		n0000124251A28E50 -> n0000124251A068A8		// FuncDef -> Expression
		n0000124251A068A8 -> n0000124251A06EC0		// Expression -> =
		n0000124251A06EC0 -> n0000124251A06D88		// = -> -
		n0000124251A06D88 -> n0000124251A06FF8		// - -> 48
		n0000124251A06D88 -> n0000124251A06B18		// - -> i
		n0000124251A06EC0 -> n0000124251A05C78		// = -> sum
		n0000124251A28E50 -> n0000124251A084B0		// FuncDef -> Expression
		n0000124251A084B0 -> n0000124251A08720		// Expression -> CallOrIndexer
		n0000124251A08720 -> n0000124251A085E8		// CallOrIndexer -> ListExpr
		n0000124251A085E8 -> n0000124251A07C28		// ListExpr -> i
		n0000124251A08720 -> n0000124251A07268		// CallOrIndexer -> scan
		n0000124251A28E50 -> n0000124251A0EB10		// FuncDef -> WhileStatement
		n0000124251A0EB10 -> n0000124251A0EFF0		// WhileStatement -> Expression
		n0000124251A0EFF0 -> n0000124251A09218		// Expression -> !=
		n0000124251A09218 -> n0000124251A09488		// != -> 32
		n0000124251A09218 -> n0000124251A08990		// != -> i
		n0000124251A0EB10 -> n0000124251A0A460		// WhileStatement -> Expression
		n0000124251A0A460 -> n0000124251A0AA78		// Expression -> =
		n0000124251A0AA78 -> n0000124251A0A940		// = -> -
		n0000124251A0A940 -> n0000124251A0ABB0		// - -> 48
		n0000124251A0A940 -> n0000124251A0A6D0		// - -> i
		n0000124251A0AA78 -> n0000124251A09830		// = -> tmp1
		n0000124251A0EB10 -> n0000124251A0BA50		// WhileStatement -> Expression
		n0000124251A0BA50 -> n0000124251A0C068		// Expression -> =
		n0000124251A0C068 -> n0000124251A0BF30		// = -> *
		n0000124251A0BF30 -> n0000124251A0C1A0		// * -> 10
		n0000124251A0BF30 -> n0000124251A0BCC0		// * -> tmp1
		n0000124251A0C068 -> n0000124251A0AE20		// = -> tmp2
		n0000124251A0EB10 -> n0000124251A0D040		// WhileStatement -> Expression
		n0000124251A0D040 -> n0000124251A0D658		// Expression -> =
		n0000124251A0D658 -> n0000124251A0D520		// = -> +
		n0000124251A0D520 -> n0000124251A0D790		// + -> tmp2
		n0000124251A0D520 -> n0000124251A0D2B0		// + -> sum
		n0000124251A0D658 -> n0000124251A0C410		// = -> sum
		n0000124251A0EB10 -> n0000124251A0EC48		// WhileStatement -> Expression
		n0000124251A0EC48 -> n0000124251A0EEB8		// Expression -> CallOrIndexer
		n0000124251A0EEB8 -> n0000124251A0ED80		// CallOrIndexer -> ListExpr
		n0000124251A0ED80 -> n0000124251A0E3C0		// ListExpr -> i
		n0000124251A0EEB8 -> n0000124251A0DA00		// CallOrIndexer -> scan
		n0000124251A28E50 -> n0000124251A0FAE8		// FuncDef -> VarStatement
		n0000124251A0FAE8 -> n0000124251A0F128		// VarStatement -> ListIdentifier
		n0000124251A0F128 -> n0000124251A08FA8		// ListIdentifier -> i1
		n0000124251A0F128 -> n0000124251A0F260		// ListIdentifier -> sum1
		n0000124251A0F128 -> n0000124251A0F398		// ListIdentifier -> tmp11
		n0000124251A0F128 -> n0000124251A0F4D0		// ListIdentifier -> tmp21
		n0000124251A0F128 -> n0000124251A0F608		// ListIdentifier -> res
		n0000124251A0F128 -> n0000124251A0F740		// ListIdentifier -> x
		n0000124251A0FAE8 -> n0000124251A0FC20		// VarStatement -> TypeRef
		n0000124251A0FC20 -> n0000124251A0F9B0		// TypeRef -> int
		n0000124251A28E50 -> n0000124251A105E0		// FuncDef -> Expression
		n0000124251A105E0 -> n0000124251A10AC0		// Expression -> =
		n0000124251A10AC0 -> n0000124251A10718		// = -> 10
		n0000124251A10AC0 -> n0000124251A0FE90		// = -> tmp11
		n0000124251A28E50 -> n0000124251A11348		// FuncDef -> Expression
		n0000124251A11348 -> n0000124251A11828		// Expression -> =
		n0000124251A11828 -> n0000124251A11480		// = -> 0
		n0000124251A11828 -> n0000124251A10BF8		// = -> tmp21
		n0000124251A28E50 -> n0000124251A12BA8		// FuncDef -> Expression
		n0000124251A12BA8 -> n0000124251A12E18		// Expression -> CallOrIndexer
		n0000124251A12E18 -> n0000124251A12CE0		// CallOrIndexer -> ListExpr
		n0000124251A12CE0 -> n0000124251A12320		// ListExpr -> i1
		n0000124251A12E18 -> n0000124251A11960		// CallOrIndexer -> scan
		n0000124251A28E50 -> n0000124251A13CB8		// FuncDef -> Expression
		n0000124251A13CB8 -> n0000124251A142D0		// Expression -> =
		n0000124251A142D0 -> n0000124251A14198		// = -> -
		n0000124251A14198 -> n0000124251A14408		// - -> 48
		n0000124251A14198 -> n0000124251A13F28		// - -> i1
		n0000124251A142D0 -> n0000124251A13088		// = -> sum1
		n0000124251A28E50 -> n0000124251A158C0		// FuncDef -> Expression
		n0000124251A158C0 -> n0000124251A15B30		// Expression -> CallOrIndexer
		n0000124251A15B30 -> n0000124251A159F8		// CallOrIndexer -> ListExpr
		n0000124251A159F8 -> n0000124251A15038		// ListExpr -> i1
		n0000124251A15B30 -> n0000124251A14678		// CallOrIndexer -> scan
		n0000124251A28E50 -> n0000124251A1BF20		// FuncDef -> WhileStatement
		n0000124251A1BF20 -> n0000124251A1C400		// WhileStatement -> Expression
		n0000124251A1C400 -> n0000124251A16628		// Expression -> !=
		n0000124251A16628 -> n0000124251A16898		// != -> 32
		n0000124251A16628 -> n0000124251A15DA0		// != -> i1
		n0000124251A1BF20 -> n0000124251A17870		// WhileStatement -> Expression
		n0000124251A17870 -> n0000124251A17E88		// Expression -> =
		n0000124251A17E88 -> n0000124251A17D50		// = -> -
		n0000124251A17D50 -> n0000124251A17FC0		// - -> 48
		n0000124251A17D50 -> n0000124251A17AE0		// - -> i1
		n0000124251A17E88 -> n0000124251A16C40		// = -> tmp11
		n0000124251A1BF20 -> n0000124251A18E60		// WhileStatement -> Expression
		n0000124251A18E60 -> n0000124251A19478		// Expression -> =
		n0000124251A19478 -> n0000124251A19340		// = -> *
		n0000124251A19340 -> n0000124251A195B0		// * -> 10
		n0000124251A19340 -> n0000124251A190D0		// * -> tmp11
		n0000124251A19478 -> n0000124251A18230		// = -> tmp21
		n0000124251A1BF20 -> n0000124251A1A450		// WhileStatement -> Expression
		n0000124251A1A450 -> n0000124251A1AA68		// Expression -> =
		n0000124251A1AA68 -> n0000124251A1A930		// = -> +
		n0000124251A1A930 -> n0000124251A1ABA0		// + -> tmp21
		n0000124251A1A930 -> n0000124251A1A6C0		// + -> sum1
		n0000124251A1AA68 -> n0000124251A19820		// = -> sum1
		n0000124251A1BF20 -> n0000124251A1C058		// WhileStatement -> Expression
		n0000124251A1C058 -> n0000124251A1C2C8		// Expression -> CallOrIndexer
		n0000124251A1C2C8 -> n0000124251A1C190		// CallOrIndexer -> ListExpr
		n0000124251A1C190 -> n0000124251A1B7D0		// ListExpr -> i1
		n0000124251A1C2C8 -> n0000124251A1AE10		// CallOrIndexer -> scan
		n0000124251A28E50 -> n0000124251A1D8B8		// FuncDef -> Expression
		n0000124251A1D8B8 -> n0000124251A1DB28		// Expression -> CallOrIndexer
		n0000124251A1DB28 -> n0000124251A1D9F0		// CallOrIndexer -> ListExpr
		n0000124251A1D9F0 -> n0000124251A1D030		// ListExpr -> x
		n0000124251A1DB28 -> n0000124251A1C670		// CallOrIndexer -> scan
		n0000124251A28E50 -> n0000124251A27860		// FuncDef -> IfStatement
		n0000124251A27860 -> n0000124251A27998		// IfStatement -> Expression
		n0000124251A27998 -> n0000124251A1E620		// Expression -> ==
		n0000124251A1E620 -> n0000124251A1E890		// == -> 43
		n0000124251A1E620 -> n0000124251A1DD98		// == -> x
		n0000124251A27860 -> n0000124251A27AD0		// IfStatement -> ThenStatement
		n0000124251A27AD0 -> n0000124251A1F868		// ThenStatement -> Expression
		n0000124251A1F868 -> n0000124251A1FE80		// Expression -> =
		n0000124251A1FE80 -> n0000124251A1FD48		// = -> +
		n0000124251A1FD48 -> n0000124251A1FFB8		// + -> sum1
		n0000124251A1FD48 -> n0000124251A1FAD8		// + -> sum
		n0000124251A1FE80 -> n0000124251A1EC38		// = -> res
		n0000124251A27860 -> n0000124251A20840		// IfStatement -> ElseStatement
		n0000124251A20840 -> n0000124251A274B8		// ElseStatement -> IfStatement
		n0000124251A274B8 -> n0000124251A275F0		// IfStatement -> Expression
		n0000124251A275F0 -> n0000124251A20AB0		// Expression -> ==
		n0000124251A20AB0 -> n0000124251A20D20		// == -> 45
		n0000124251A20AB0 -> n0000124251A20228		// == -> x
		n0000124251A274B8 -> n0000124251A27728		// IfStatement -> ThenStatement
		n0000124251A27728 -> n0000124251A21CF8		// ThenStatement -> Expression
		n0000124251A21CF8 -> n0000124251A22310		// Expression -> =
		n0000124251A22310 -> n0000124251A221D8		// = -> -
		n0000124251A221D8 -> n0000124251A22448		// - -> sum1
		n0000124251A221D8 -> n0000124251A21F68		// - -> sum
		n0000124251A22310 -> n0000124251A210C8		// = -> res
		n0000124251A274B8 -> n0000124251A22CD0		// IfStatement -> ElseStatement
		n0000124251A22CD0 -> n0000124251A27110		// ElseStatement -> IfStatement
		n0000124251A27110 -> n0000124251A27248		// IfStatement -> Expression
		n0000124251A27248 -> n0000124251A22F40		// Expression -> ==
		n0000124251A22F40 -> n0000124251A231B0		// == -> 47
		n0000124251A22F40 -> n0000124251A226B8		// == -> x
		n0000124251A27110 -> n0000124251A27380		// IfStatement -> ThenStatement
		n0000124251A27380 -> n0000124251A24188		// ThenStatement -> Expression
		n0000124251A24188 -> n0000124251A247A0		// Expression -> =
		n0000124251A247A0 -> n0000124251A24668		// = -> /
		n0000124251A24668 -> n0000124251A248D8		// / -> sum1
		n0000124251A24668 -> n0000124251A243F8		// / -> sum
		n0000124251A247A0 -> n0000124251A23558		// = -> res
		n0000124251A27110 -> n0000124251A25160		// IfStatement -> ElseStatement
		n0000124251A25160 -> n0000124251A264E0		// ElseStatement -> IfStatement
		n0000124251A264E0 -> n0000124251A26750		// IfStatement -> Expression
		n0000124251A26750 -> n0000124251A253D0		// Expression -> ==
		n0000124251A253D0 -> n0000124251A25640		// == -> 42
		n0000124251A253D0 -> n0000124251A24B48		// == -> x
		n0000124251A264E0 -> n0000124251A26FD8		// IfStatement -> ThenStatement
		n0000124251A26FD8 -> n0000124251A26618		// ThenStatement -> Expression
		n0000124251A26618 -> n0000124251A26C30		// Expression -> =
		n0000124251A26C30 -> n0000124251A26AF8		// = -> *
		n0000124251A26AF8 -> n0000124251A26D68		// * -> sum1
		n0000124251A26AF8 -> n0000124251A26888		// * -> sum
		n0000124251A26C30 -> n0000124251A259E8		// = -> res
		n0000124251A28E50 -> n0000124251A28F88		// FuncDef -> Expression
		n0000124251A28F88 -> n0000124251A291F8		// Expression -> CallOrIndexer
		n0000124251A291F8 -> n0000124251A290C0		// CallOrIndexer -> ListExpr
		n0000124251A290C0 -> n0000124251A28700		// ListExpr -> res
		n0000124251A291F8 -> n0000124251A27D40		// CallOrIndexer -> print_value
		n0000124251A28E50 -> n0000124251A01970		// FuncDef -> end
		n0000124251A39E18 -> n0000124251A33B60		// Source -> FuncDef
		n0000124251A33B60 -> n0000124251A29810		// FuncDef -> FuncSignature
		n0000124251A29810 -> n0000124251A29948		// FuncSignature -> print_value
		n0000124251A29948 -> n0000124251A296D8		// print_value -> ListArgdef
		n0000124251A296D8 -> n0000124251A29468		// ListArgdef -> ArgDef
		n0000124251A29468 -> n0000124251A29330		// ArgDef -> res
		n0000124251A33B60 -> n0000124251A2A1D0		// FuncDef -> VarStatement
		n0000124251A2A1D0 -> n0000124251A29BB8		// VarStatement -> ListIdentifier
		n0000124251A29BB8 -> n0000124251A29A80		// ListIdentifier -> nextLine
		n0000124251A29BB8 -> n0000124251A29CF0		// ListIdentifier -> revertedNum
		n0000124251A29BB8 -> n0000124251A29E28		// ListIdentifier -> tmp
		n0000124251A2A1D0 -> n0000124251A2A308		// VarStatement -> TypeRef
		n0000124251A2A308 -> n0000124251A2A098		// TypeRef -> int
		n0000124251A33B60 -> n0000124251A2ACC8		// FuncDef -> Expression
		n0000124251A2ACC8 -> n0000124251A2B1A8		// Expression -> =
		n0000124251A2B1A8 -> n0000124251A2AE00		// = -> 10
		n0000124251A2B1A8 -> n0000124251A2A578		// = -> nextLine
		n0000124251A33B60 -> n0000124251A2BA30		// FuncDef -> Expression
		n0000124251A2BA30 -> n0000124251A2BF10		// Expression -> =
		n0000124251A2BF10 -> n0000124251A2BB68		// = -> 0
		n0000124251A2BF10 -> n0000124251A2B2E0		// = -> revertedNum
		n0000124251A33B60 -> n0000124251A32918		// FuncDef -> WhileStatement
		n0000124251A32918 -> n0000124251A32B88		// WhileStatement -> Expression
		n0000124251A32B88 -> n0000124251A2C8D0		// Expression -> !=
		n0000124251A2C8D0 -> n0000124251A2CB40		// != -> 0
		n0000124251A2C8D0 -> n0000124251A2C048		// != -> res
		n0000124251A32918 -> n0000124251A2DB18		// WhileStatement -> Expression
		n0000124251A2DB18 -> n0000124251A2E130		// Expression -> =
		n0000124251A2E130 -> n0000124251A2DFF8		// = -> *
		n0000124251A2DFF8 -> n0000124251A2E268		// * -> 10
		n0000124251A2DFF8 -> n0000124251A2DD88		// * -> revertedNum
		n0000124251A2E130 -> n0000124251A2CEE8		// = -> revertedNum
		n0000124251A32918 -> n0000124251A2F108		// WhileStatement -> Expression
		n0000124251A2F108 -> n0000124251A2F720		// Expression -> =
		n0000124251A2F720 -> n0000124251A2F5E8		// = -> 
		n0000124251A2F5E8 -> n0000124251A2F858		// > 10
		n0000124251A2F5E8 -> n0000124251A2F378		// > res
		n0000124251A2F720 -> n0000124251A2E4D8		// = -> tmp
		n0000124251A32918 -> n0000124251A30218		// WhileStatement -> Expression
		n0000124251A30218 -> n0000124251A306F8		// Expression -> =
		n0000124251A306F8 -> n0000124251A30350		// = -> tmp
		n0000124251A306F8 -> n0000124251A2FAC8		// = -> tmp
		n0000124251A32918 -> n0000124251A31460		// WhileStatement -> Expression
		n0000124251A31460 -> n0000124251A31A78		// Expression -> =
		n0000124251A31A78 -> n0000124251A31940		// = -> +
		n0000124251A31940 -> n0000124251A31BB0		// + -> tmp
		n0000124251A31940 -> n0000124251A316D0		// + -> revertedNum
		n0000124251A31A78 -> n0000124251A30830		// = -> revertedNum
		n0000124251A32918 -> n0000124251A32A50		// WhileStatement -> Expression
		n0000124251A32A50 -> n0000124251A33068		// Expression -> =
		n0000124251A33068 -> n0000124251A32F30		// = -> /
		n0000124251A32F30 -> n0000124251A331A0		// / -> 10
		n0000124251A32F30 -> n0000124251A32CC0		// / -> res
		n0000124251A33068 -> n0000124251A31E20		// = -> res
		n0000124251A33B60 -> n0000124251A391E8		// FuncDef -> WhileStatement
		n0000124251A391E8 -> n0000124251A39458		// WhileStatement -> Expression
		n0000124251A39458 -> n0000124251A33DD0		// Expression -> !=
		n0000124251A33DD0 -> n0000124251A34040		// != -> 0
		n0000124251A33DD0 -> n0000124251A33548		// != -> revertedNum
		n0000124251A391E8 -> n0000124251A35018		// WhileStatement -> Expression
		n0000124251A35018 -> n0000124251A35630		// Expression -> =
		n0000124251A35630 -> n0000124251A354F8		// = -> 
		n0000124251A354F8 -> n0000124251A35768		// > 10
		n0000124251A354F8 -> n0000124251A35288		// > revertedNum
		n0000124251A35630 -> n0000124251A343E8		// = -> tmp
		n0000124251A391E8 -> n0000124251A36608		// WhileStatement -> Expression
		n0000124251A36608 -> n0000124251A36C20		// Expression -> =
		n0000124251A36C20 -> n0000124251A36AE8		// = -> +
		n0000124251A36AE8 -> n0000124251A36D58		// + -> 48
		n0000124251A36AE8 -> n0000124251A36878		// + -> tmp
		n0000124251A36C20 -> n0000124251A359D8		// = -> tmp
		n0000124251A391E8 -> n0000124251A38210		// WhileStatement -> Expression
		n0000124251A38210 -> n0000124251A38480		// Expression -> CallOrIndexer
		n0000124251A38480 -> n0000124251A38348		// CallOrIndexer -> ListExpr
		n0000124251A38348 -> n0000124251A37988		// ListExpr -> tmp
		n0000124251A38480 -> n0000124251A36FC8		// CallOrIndexer -> print
		n0000124251A391E8 -> n0000124251A39320		// WhileStatement -> Expression
		n0000124251A39320 -> n0000124251A39938		// Expression -> =
		n0000124251A39938 -> n0000124251A39800		// = -> /
		n0000124251A39800 -> n0000124251A39A70		// / -> 10
		n0000124251A39800 -> n0000124251A39590		// / -> revertedNum
		n0000124251A39938 -> n0000124251A386F0		// = -> revertedNum
		n0000124251A33B60 -> n0000124251A295A0		// FuncDef -> end

}