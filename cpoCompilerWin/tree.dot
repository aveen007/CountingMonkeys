digraph {

	ordering=out;
	ranksep=.4;
	bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
	width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

	edge [arrowsize=.5, color="black", style="bold"]

	n00000248784C5C08[label="Sourcer"]
	n00000248784C5AD0[label="Source"]
	n00000248784BF5A8[label="FuncDef"]
	n00000248784BC3B0[label="FuncSignature"]
	n00000248784BC4E8[label="processArray"]
	n00000248784BC008[label="ListArgdef"]
	n00000248784BBD98[label="ArgDef"]
	n00000248784BB8B8[label="arr"]
	n00000248784BBC60[label="TypeRef"]
	n00000248784BB9F0[label="Array"]
	n00000248784BB648[label="TypeRef"]
	n00000248784BB780[label="int"]
	n00000248784BBB28[label="Elements"]
	n00000248784BC278[label="TypeRef"]
	n00000248784BBED0[label="int"]
	n00000248784BCB00[label="VarStatement"]
	n00000248784BC758[label="ListIdentifier"]
	n00000248784BC620[label="sum"]
	n00000248784BCC38[label="TypeRef"]
	n00000248784BC9C8[label="int"]
	n00000248784BD118[label="VarStatement"]
	n00000248784BCD70[label="ListIdentifier"]
	n00000248784BC890[label="i"]
	n00000248784BD250[label="TypeRef"]
	n00000248784BCFE0[label="int"]
	n00000248784BDC10[label="Expression"]
	n00000248784BE0F0[label="="]
	n00000248784BDD48[label="0"]
	n00000248784BD4C0[label="sum"]
	n00000248784BE978[label="Expression"]
	n00000248784BEE58[label="="]
	n00000248784BEAB0[label="0"]
	n00000248784BE228[label="i"]
	n00000248784C4D68[label="IfStatement"]
	n00000248784C55F0[label="Expression"]
	n00000248784BF818[label="<"]
	n00000248784BFA88[label="9"]
	n00000248784BEF90[label="i"]
	n00000248784C0A60[label="Expression"]
	n00000248784C1078[label="="]
	n00000248784C0F40[label="+"]
	n00000248784C11B0[label="i"]
	n00000248784C0CD0[label="sum"]
	n00000248784BFE30[label="sum"]
	n00000248784C2050[label="Expression"]
	n00000248784C2668[label="="]
	n00000248784C2530[label="+"]
	n00000248784C27A0[label="1"]
	n00000248784C22C0[label="i"]
	n00000248784C1420[label="i"]
	n00000248784C4AF8[label="ElseStatement"]
	n00000248784C3640[label="Expression"]
	n00000248784C3C58[label="="]
	n00000248784C3B20[label="-"]
	n00000248784C3D90[label="i"]
	n00000248784C38B0[label="sum"]
	n00000248784C2A10[label="sum"]
	n00000248784C4C30[label="Expression"]
	n00000248784C5248[label="="]
	n00000248784C5110[label="-"]
	n00000248784C5380[label="1"]
	n00000248784C4EA0[label="i"]
	n00000248784C4000[label="i"]
	n00000248784C5998[label="FuncDef"]
	n00000248784C5728[label="FuncSignature"]
	n00000248784C5860[label="processWhile"]

		n00000248784C5C08 -> n00000248784C5AD0		// Sourcer -> Source
		n00000248784C5AD0 -> n00000248784BF5A8		// Source -> FuncDef
		n00000248784BF5A8 -> n00000248784BC3B0		// FuncDef -> FuncSignature
		n00000248784BC3B0 -> n00000248784BC4E8		// FuncSignature -> processArray
		n00000248784BC4E8 -> n00000248784BC008		// processArray -> ListArgdef
		n00000248784BC008 -> n00000248784BBD98		// ListArgdef -> ArgDef
		n00000248784BBD98 -> n00000248784BB8B8		// ArgDef -> arr
		n00000248784BBD98 -> n00000248784BBC60		// ArgDef -> TypeRef
		n00000248784BBC60 -> n00000248784BB9F0		// TypeRef -> Array
		n00000248784BB9F0 -> n00000248784BB648		// Array -> TypeRef
		n00000248784BB648 -> n00000248784BB780		// TypeRef -> int
		n00000248784BB9F0 -> n00000248784BBB28		// Array -> Elements
		n00000248784BC3B0 -> n00000248784BC278		// FuncSignature -> TypeRef
		n00000248784BC278 -> n00000248784BBED0		// TypeRef -> int
		n00000248784BF5A8 -> n00000248784BCB00		// FuncDef -> VarStatement
		n00000248784BCB00 -> n00000248784BC758		// VarStatement -> ListIdentifier
		n00000248784BC758 -> n00000248784BC620		// ListIdentifier -> sum
		n00000248784BCB00 -> n00000248784BCC38		// VarStatement -> TypeRef
		n00000248784BCC38 -> n00000248784BC9C8		// TypeRef -> int
		n00000248784BF5A8 -> n00000248784BD118		// FuncDef -> VarStatement
		n00000248784BD118 -> n00000248784BCD70		// VarStatement -> ListIdentifier
		n00000248784BCD70 -> n00000248784BC890		// ListIdentifier -> i
		n00000248784BD118 -> n00000248784BD250		// VarStatement -> TypeRef
		n00000248784BD250 -> n00000248784BCFE0		// TypeRef -> int
		n00000248784BF5A8 -> n00000248784BDC10		// FuncDef -> Expression
		n00000248784BDC10 -> n00000248784BE0F0		// Expression -> =
		n00000248784BE0F0 -> n00000248784BDD48		// = -> 0
		n00000248784BE0F0 -> n00000248784BD4C0		// = -> sum
		n00000248784BF5A8 -> n00000248784BE978		// FuncDef -> Expression
		n00000248784BE978 -> n00000248784BEE58		// Expression -> =
		n00000248784BEE58 -> n00000248784BEAB0		// = -> 0
		n00000248784BEE58 -> n00000248784BE228		// = -> i
		n00000248784BF5A8 -> n00000248784C4D68		// FuncDef -> IfStatement
		n00000248784C4D68 -> n00000248784C55F0		// IfStatement -> Expression
		n00000248784C55F0 -> n00000248784BF818		// Expression -> <
		n00000248784BF818 -> n00000248784BFA88		// < -> 9
		n00000248784BF818 -> n00000248784BEF90		// < -> i
		n00000248784C4D68 -> n00000248784C0A60		// IfStatement -> Expression
		n00000248784C0A60 -> n00000248784C1078		// Expression -> =
		n00000248784C1078 -> n00000248784C0F40		// = -> +
		n00000248784C0F40 -> n00000248784C11B0		// + -> i
		n00000248784C0F40 -> n00000248784C0CD0		// + -> sum
		n00000248784C1078 -> n00000248784BFE30		// = -> sum
		n00000248784C4D68 -> n00000248784C2050		// IfStatement -> Expression
		n00000248784C2050 -> n00000248784C2668		// Expression -> =
		n00000248784C2668 -> n00000248784C2530		// = -> +
		n00000248784C2530 -> n00000248784C27A0		// + -> 1
		n00000248784C2530 -> n00000248784C22C0		// + -> i
		n00000248784C2668 -> n00000248784C1420		// = -> i
		n00000248784C4D68 -> n00000248784C4AF8		// IfStatement -> ElseStatement
		n00000248784C4AF8 -> n00000248784C3640		// ElseStatement -> Expression
		n00000248784C3640 -> n00000248784C3C58		// Expression -> =
		n00000248784C3C58 -> n00000248784C3B20		// = -> -
		n00000248784C3B20 -> n00000248784C3D90		// - -> i
		n00000248784C3B20 -> n00000248784C38B0		// - -> sum
		n00000248784C3C58 -> n00000248784C2A10		// = -> sum
		n00000248784C4AF8 -> n00000248784C4C30		// ElseStatement -> Expression
		n00000248784C4C30 -> n00000248784C5248		// Expression -> =
		n00000248784C5248 -> n00000248784C5110		// = -> -
		n00000248784C5110 -> n00000248784C5380		// - -> 1
		n00000248784C5110 -> n00000248784C4EA0		// - -> i
		n00000248784C5248 -> n00000248784C4000		// = -> i
		n00000248784C5AD0 -> n00000248784C5998		// Source -> FuncDef
		n00000248784C5998 -> n00000248784C5728		// FuncDef -> FuncSignature
		n00000248784C5728 -> n00000248784C5860		// FuncSignature -> processWhile

}