digraph {

	ordering=out;
	ranksep=.4;
	bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
	width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

	edge [arrowsize=.5, color="black", style="bold"]

	n0000023778065D18[label="Sourcer"]
	n0000023778065BE0[label="Source"]
	n000002377805F6B8[label="FuncDef"]
	n000002377805C4C0[label="FuncSignature"]
	n000002377805C5F8[label="processArray"]
	n000002377805C118[label="ListArgdef"]
	n000002377805BEA8[label="ArgDef"]
	n000002377805B9C8[label="arr"]
	n000002377805BD70[label="TypeRef"]
	n000002377805BB00[label="Array"]
	n000002377805B758[label="TypeRef"]
	n000002377805B890[label="int"]
	n000002377805BC38[label="Elements"]
	n000002377805C388[label="TypeRef"]
	n000002377805BFE0[label="int"]
	n000002377805CC10[label="VarStatement"]
	n000002377805C868[label="ListIdentifier"]
	n000002377805C730[label="sum"]
	n000002377805CD48[label="TypeRef"]
	n000002377805CAD8[label="int"]
	n000002377805D228[label="VarStatement"]
	n000002377805CE80[label="ListIdentifier"]
	n000002377805C9A0[label="i"]
	n000002377805D360[label="TypeRef"]
	n000002377805D0F0[label="int"]
	n000002377805DD20[label="Expression"]
	n000002377805E200[label="="]
	n000002377805DE58[label="0"]
	n000002377805D5D0[label="sum"]
	n000002377805EA88[label="Expression"]
	n000002377805EF68[label="="]
	n000002377805EBC0[label="0"]
	n000002377805E338[label="i"]
	n0000023778064E78[label="IfStatement"]
	n0000023778065700[label="Expression"]
	n000002377805F928[label="<"]
	n000002377805FB98[label="9"]
	n000002377805F0A0[label="i"]
	n0000023778060B70[label="Expression"]
	n0000023778061188[label="="]
	n0000023778061050[label="+"]
	n00000237780612C0[label="i"]
	n0000023778060DE0[label="sum"]
	n000002377805FF40[label="sum"]
	n0000023778062160[label="Expression"]
	n0000023778062778[label="="]
	n0000023778062640[label="+"]
	n00000237780628B0[label="1"]
	n00000237780623D0[label="i"]
	n0000023778061530[label="i"]
	n0000023778064C08[label="ElseStatement"]
	n0000023778063750[label="Expression"]
	n0000023778063D68[label="="]
	n0000023778063C30[label="-"]
	n0000023778063EA0[label="i"]
	n00000237780639C0[label="sum"]
	n0000023778062B20[label="sum"]
	n0000023778064D40[label="Expression"]
	n0000023778065358[label="="]
	n0000023778065220[label="-"]
	n0000023778065490[label="1"]
	n0000023778064FB0[label="i"]
	n0000023778064110[label="i"]
	n0000023778065AA8[label="FuncDef"]
	n0000023778065838[label="FuncSignature"]
	n0000023778065970[label="processWhile"]

		n0000023778065D18 -> n0000023778065BE0		// Sourcer -> Source
		n0000023778065BE0 -> n000002377805F6B8		// Source -> FuncDef
		n000002377805F6B8 -> n000002377805C4C0		// FuncDef -> FuncSignature
		n000002377805C4C0 -> n000002377805C5F8		// FuncSignature -> processArray
		n000002377805C5F8 -> n000002377805C118		// processArray -> ListArgdef
		n000002377805C118 -> n000002377805BEA8		// ListArgdef -> ArgDef
		n000002377805BEA8 -> n000002377805B9C8		// ArgDef -> arr
		n000002377805BEA8 -> n000002377805BD70		// ArgDef -> TypeRef
		n000002377805BD70 -> n000002377805BB00		// TypeRef -> Array
		n000002377805BB00 -> n000002377805B758		// Array -> TypeRef
		n000002377805B758 -> n000002377805B890		// TypeRef -> int
		n000002377805BB00 -> n000002377805BC38		// Array -> Elements
		n000002377805C4C0 -> n000002377805C388		// FuncSignature -> TypeRef
		n000002377805C388 -> n000002377805BFE0		// TypeRef -> int
		n000002377805F6B8 -> n000002377805CC10		// FuncDef -> VarStatement
		n000002377805CC10 -> n000002377805C868		// VarStatement -> ListIdentifier
		n000002377805C868 -> n000002377805C730		// ListIdentifier -> sum
		n000002377805CC10 -> n000002377805CD48		// VarStatement -> TypeRef
		n000002377805CD48 -> n000002377805CAD8		// TypeRef -> int
		n000002377805F6B8 -> n000002377805D228		// FuncDef -> VarStatement
		n000002377805D228 -> n000002377805CE80		// VarStatement -> ListIdentifier
		n000002377805CE80 -> n000002377805C9A0		// ListIdentifier -> i
		n000002377805D228 -> n000002377805D360		// VarStatement -> TypeRef
		n000002377805D360 -> n000002377805D0F0		// TypeRef -> int
		n000002377805F6B8 -> n000002377805DD20		// FuncDef -> Expression
		n000002377805DD20 -> n000002377805E200		// Expression -> =
		n000002377805E200 -> n000002377805DE58		// = -> 0
		n000002377805E200 -> n000002377805D5D0		// = -> sum
		n000002377805F6B8 -> n000002377805EA88		// FuncDef -> Expression
		n000002377805EA88 -> n000002377805EF68		// Expression -> =
		n000002377805EF68 -> n000002377805EBC0		// = -> 0
		n000002377805EF68 -> n000002377805E338		// = -> i
		n000002377805F6B8 -> n0000023778064E78		// FuncDef -> IfStatement
		n0000023778064E78 -> n0000023778065700		// IfStatement -> Expression
		n0000023778065700 -> n000002377805F928		// Expression -> <
		n000002377805F928 -> n000002377805FB98		// < -> 9
		n000002377805F928 -> n000002377805F0A0		// < -> i
		n0000023778064E78 -> n0000023778060B70		// IfStatement -> Expression
		n0000023778060B70 -> n0000023778061188		// Expression -> =
		n0000023778061188 -> n0000023778061050		// = -> +
		n0000023778061050 -> n00000237780612C0		// + -> i
		n0000023778061050 -> n0000023778060DE0		// + -> sum
		n0000023778061188 -> n000002377805FF40		// = -> sum
		n0000023778064E78 -> n0000023778062160		// IfStatement -> Expression
		n0000023778062160 -> n0000023778062778		// Expression -> =
		n0000023778062778 -> n0000023778062640		// = -> +
		n0000023778062640 -> n00000237780628B0		// + -> 1
		n0000023778062640 -> n00000237780623D0		// + -> i
		n0000023778062778 -> n0000023778061530		// = -> i
		n0000023778064E78 -> n0000023778064C08		// IfStatement -> ElseStatement
		n0000023778064C08 -> n0000023778063750		// ElseStatement -> Expression
		n0000023778063750 -> n0000023778063D68		// Expression -> =
		n0000023778063D68 -> n0000023778063C30		// = -> -
		n0000023778063C30 -> n0000023778063EA0		// - -> i
		n0000023778063C30 -> n00000237780639C0		// - -> sum
		n0000023778063D68 -> n0000023778062B20		// = -> sum
		n0000023778064C08 -> n0000023778064D40		// ElseStatement -> Expression
		n0000023778064D40 -> n0000023778065358		// Expression -> =
		n0000023778065358 -> n0000023778065220		// = -> -
		n0000023778065220 -> n0000023778065490		// - -> 1
		n0000023778065220 -> n0000023778064FB0		// - -> i
		n0000023778065358 -> n0000023778064110		// = -> i
		n0000023778065BE0 -> n0000023778065AA8		// Source -> FuncDef
		n0000023778065AA8 -> n0000023778065838		// FuncDef -> FuncSignature
		n0000023778065838 -> n0000023778065970		// FuncSignature -> processWhile

}