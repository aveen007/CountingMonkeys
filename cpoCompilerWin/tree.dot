digraph {

	ordering=out;
	ranksep=.4;
	bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
	width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

	edge [arrowsize=.5, color="black", style="bold"]

	n0000128B2D15A0B8[label="Sourcer"]
	n0000128B2D159F80[label="Source"]
	n0000128B2D156770[label="FuncDef"]
	n0000128B2D151BE0[label="FuncSignature"]
	n0000128B2D151D18[label="calculator"]
	n0000128B2D151AA8[label="ListArgdef"]
	n0000128B2D152468[label="VarStatement"]
	n0000128B2D151F88[label="ListIdentifier"]
	n0000128B2D151E50[label="i"]
	n0000128B2D1520C0[label="sum"]
	n0000128B2D1525A0[label="TypeRef"]
	n0000128B2D152330[label="int"]
	n0000128B2D152F60[label="Expression"]
	n0000128B2D153440[label="="]
	n0000128B2D153098[label="3"]
	n0000128B2D152810[label="i"]
	n0000128B2D1541A8[label="Expression"]
	n0000128B2D1547C0[label="="]
	n0000128B2D154688[label="*"]
	n0000128B2D1548F8[label="6"]
	n0000128B2D154418[label="i"]
	n0000128B2D153578[label="sum"]
	n0000128B2D155798[label="Expression"]
	n0000128B2D155DB0[label="="]
	n0000128B2D155C78[label="/"]
	n0000128B2D155EE8[label="2"]
	n0000128B2D155A08[label="i"]
	n0000128B2D154B68[label="sum"]
	n0000128B2D159350[label="IfStatement"]
	n0000128B2D159BD8[label="Expression"]
	n0000128B2D1569E0[label=">"]
	n0000128B2D156C50[label="0"]
	n0000128B2D156158[label="i"]
	n0000128B2D159D10[label="ThenStatement"]
	n0000128B2D157C28[label="Expression"]
	n0000128B2D158240[label="="]
	n0000128B2D158108[label="+"]
	n0000128B2D158378[label="2"]
	n0000128B2D157E98[label="i"]
	n0000128B2D156FF8[label="sum"]
	n0000128B2D1590E0[label="ElseStatement"]
	n0000128B2D159218[label="Expression"]
	n0000128B2D159830[label="="]
	n0000128B2D1596F8[label="-"]
	n0000128B2D159968[label="3"]
	n0000128B2D159488[label="i"]
	n0000128B2D1585E8[label="sum"]
	n0000128B2D151970[label="end"]

		n0000128B2D15A0B8 -> n0000128B2D159F80		// Sourcer -> Source
		n0000128B2D159F80 -> n0000128B2D156770		// Source -> FuncDef
		n0000128B2D156770 -> n0000128B2D151BE0		// FuncDef -> FuncSignature
		n0000128B2D151BE0 -> n0000128B2D151D18		// FuncSignature -> calculator
		n0000128B2D151D18 -> n0000128B2D151AA8		// calculator -> ListArgdef
		n0000128B2D156770 -> n0000128B2D152468		// FuncDef -> VarStatement
		n0000128B2D152468 -> n0000128B2D151F88		// VarStatement -> ListIdentifier
		n0000128B2D151F88 -> n0000128B2D151E50		// ListIdentifier -> i
		n0000128B2D151F88 -> n0000128B2D1520C0		// ListIdentifier -> sum
		n0000128B2D152468 -> n0000128B2D1525A0		// VarStatement -> TypeRef
		n0000128B2D1525A0 -> n0000128B2D152330		// TypeRef -> int
		n0000128B2D156770 -> n0000128B2D152F60		// FuncDef -> Expression
		n0000128B2D152F60 -> n0000128B2D153440		// Expression -> =
		n0000128B2D153440 -> n0000128B2D153098		// = -> 3
		n0000128B2D153440 -> n0000128B2D152810		// = -> i
		n0000128B2D156770 -> n0000128B2D1541A8		// FuncDef -> Expression
		n0000128B2D1541A8 -> n0000128B2D1547C0		// Expression -> =
		n0000128B2D1547C0 -> n0000128B2D154688		// = -> *
		n0000128B2D154688 -> n0000128B2D1548F8		// * -> 6
		n0000128B2D154688 -> n0000128B2D154418		// * -> i
		n0000128B2D1547C0 -> n0000128B2D153578		// = -> sum
		n0000128B2D156770 -> n0000128B2D155798		// FuncDef -> Expression
		n0000128B2D155798 -> n0000128B2D155DB0		// Expression -> =
		n0000128B2D155DB0 -> n0000128B2D155C78		// = -> /
		n0000128B2D155C78 -> n0000128B2D155EE8		// / -> 2
		n0000128B2D155C78 -> n0000128B2D155A08		// / -> i
		n0000128B2D155DB0 -> n0000128B2D154B68		// = -> sum
		n0000128B2D156770 -> n0000128B2D159350		// FuncDef -> IfStatement
		n0000128B2D159350 -> n0000128B2D159BD8		// IfStatement -> Expression
		n0000128B2D159BD8 -> n0000128B2D1569E0		// Expression -> >
		n0000128B2D1569E0 -> n0000128B2D156C50		// > -> 0
		n0000128B2D1569E0 -> n0000128B2D156158		// > -> i
		n0000128B2D159350 -> n0000128B2D159D10		// IfStatement -> ThenStatement
		n0000128B2D159D10 -> n0000128B2D157C28		// ThenStatement -> Expression
		n0000128B2D157C28 -> n0000128B2D158240		// Expression -> =
		n0000128B2D158240 -> n0000128B2D158108		// = -> +
		n0000128B2D158108 -> n0000128B2D158378		// + -> 2
		n0000128B2D158108 -> n0000128B2D157E98		// + -> i
		n0000128B2D158240 -> n0000128B2D156FF8		// = -> sum
		n0000128B2D159350 -> n0000128B2D1590E0		// IfStatement -> ElseStatement
		n0000128B2D1590E0 -> n0000128B2D159218		// ElseStatement -> Expression
		n0000128B2D159218 -> n0000128B2D159830		// Expression -> =
		n0000128B2D159830 -> n0000128B2D1596F8		// = -> -
		n0000128B2D1596F8 -> n0000128B2D159968		// - -> 3
		n0000128B2D1596F8 -> n0000128B2D159488		// - -> i
		n0000128B2D159830 -> n0000128B2D1585E8		// = -> sum
		n0000128B2D156770 -> n0000128B2D151970		// FuncDef -> end

}