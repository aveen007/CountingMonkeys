digraph G {
ordering=out;
ranksep=.4;
bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

edge [arrowsize=.5, color="black", style="bold"]    n000011E479922AE0 [label="BaseBlock\n OT: [ =(2 , sum)]
OT: [ =(0 , j)]
OT: [ processWhile(1 , 2)]
"]
    n000011E479922B40 [label="IfBlock\n OT: [ <(9 , j)]
"]
    n000011E479922AE0 -> n000011E479922B40
    n000011E479922B40 -> n000011E479922BA0 [label="True" color="green"]
    n000011E479922BA0 [label="ThenBlock\n OT: [ =( +(j , sum) , sum)]
OT: [ =( +(1 , j) , j)]
"]
    n000011E479922F60 [label="IfExitBlock\n "]
    n000011E479922BA0 -> n000011E479922F60
    n000011E479922FC0 [label="IfBlock\n OT: [ >(0 , j)]
"]
    n000011E479922F60 -> n000011E479922FC0
    n000011E479922FC0 -> n000011E479923020 [label="True" color="green"]
    n000011E479923020 [label="ThenBlock\n OT: [ =( +(j , sum) , sum)]
OT: [ =( +(1 , j) , j)]
"]
    n000011E479923080 [label="IfExitBlock\n "]
    n000011E479923020 -> n000011E479923080
    n000011E4799230E0 [label="IfBlock\n OT: [ >(0 , j)]
"]
    n000011E479923080 -> n000011E4799230E0
    n000011E4799230E0 -> n000011E479923140 [label="True" color="green"]
    n000011E479923140 [label="ThenBlock\n OT: [ =( +(j , sum) , sum)]
OT: [ =( +(1 , j) , j)]
"]
    n000011E4799231A0 [label="IfExitBlock\n "]
    n000011E479923140 -> n000011E4799231A0
    n000011E479923200 [label="BaseBlock\n "]
    n000011E4799231A0 -> n000011E479923200
    n000011E479922B40 -> n000011E479922C00 [label="True" color="red"]
    n000011E479922C00 [label="ElseBlock\n OT: [ =( -(j , sum) , sum)]
"]
    n000011E479922C60 [label="WhileBlock\n OT: [ >(0 , j)]
"]
    n000011E479922C00 -> n000011E479922C60
	   n000011E479922C60 -> n000011E479922CC0 [ label = "True" color="green"]
    n000011E479922CC0 [label="WhileBodyBlock\n "]
    n000011E479922D80 [label="IfBlock\n OT: [ >=(sum , i)]
"]
    n000011E479922CC0 -> n000011E479922D80
    n000011E479922D80 -> n000011E479922DE0 [label="True" color="green"]
    n000011E479922DE0 [label="ThenBlock\n OT: [ =( -(1 , j) , j)]
"]
    n000011E479922F00 [label="IfExitBlock\n "]
    n000011E479922DE0 -> n000011E479922F00
    n000011E479922F00 -> n000011E479922C60
    n000011E479922D80 -> n000011E479922E40 [label="True" color="red"]
    n000011E479922E40 [label="ElseBlock\n OT: [ =( +(1 , j) , j)]
"]
    n000011E479922EA0 [label="BreakBlock\n "]
    n000011E479922E40 -> n000011E479922EA0
    n000011E479922EA0 -> n000011E479922F00
	   n000011E479922C60 -> n000011E479922D20 [ label = "False" color="red"]
    n000011E479922D20 [label="WhileExitBlock\n "]
    n000011E479922D20 -> n000011E479922F60
}
