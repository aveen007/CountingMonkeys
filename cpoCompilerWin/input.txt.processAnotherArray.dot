digraph G {
ordering=out;
ranksep=.4;
bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

edge [arrowsize=.5, color="black", style="bold"]    n000011CED78A2AE0 [label="BaseBlock\n OT: [ =( 2 ,  sum)]
OT: [ =( 0 ,  i)]
OT: [ processWhile( 1 ,  2)]
"]
    n000011CED78A2B40 [label="IfBlock\n OT: [ <( 9 ,  i)]
"]
    n000011CED78A2AE0 -> n000011CED78A2B40
    n000011CED78A2B40 -> n000011CED78A2BA0 [label="True" color="green"]
    n000011CED78A2BA0 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A2F60 [label="IfExitBlock\n "]
    n000011CED78A2BA0 -> n000011CED78A2F60
    n000011CED78A2FC0 [label="IfBlock\n OT: [ >( 0 ,  i)]
"]
    n000011CED78A2F60 -> n000011CED78A2FC0
    n000011CED78A2FC0 -> n000011CED78A3020 [label="True" color="green"]
    n000011CED78A3020 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A3080 [label="IfExitBlock\n "]
    n000011CED78A3020 -> n000011CED78A3080
    n000011CED78A30E0 [label="IfBlock\n OT: [ >( 0 ,  i)]
"]
    n000011CED78A3080 -> n000011CED78A30E0
    n000011CED78A30E0 -> n000011CED78A3140 [label="True" color="green"]
    n000011CED78A3140 [label="ThenBlock\n OT: [ =( +( i ,  sum) ,  sum)]
OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A31A0 [label="IfExitBlock\n "]
    n000011CED78A3140 -> n000011CED78A31A0
    n000011CED78A3200 [label="BaseBlock\n "]
    n000011CED78A31A0 -> n000011CED78A3200
    n000011CED78A2B40 -> n000011CED78A2C00 [label="True" color="red"]
    n000011CED78A2C00 [label="ElseBlock\n OT: [ =( -( i ,  sum) ,  sum)]
"]
    n000011CED78A2C60 [label="WhileBlock\n OT: [ >( 0 ,  i)]
"]
    n000011CED78A2C00 -> n000011CED78A2C60
	   n000011CED78A2C60 -> n000011CED78A2CC0 [ label = "True" color="green"]
    n000011CED78A2CC0 [label="WhileBodyBlock\n "]
    n000011CED78A2D80 [label="IfBlock\n OT: [ >=( sum ,  i)]
"]
    n000011CED78A2CC0 -> n000011CED78A2D80
    n000011CED78A2D80 -> n000011CED78A2DE0 [label="True" color="green"]
    n000011CED78A2DE0 [label="ThenBlock\n OT: [ =( -( 1 ,  i) ,  i)]
"]
    n000011CED78A2F00 [label="IfExitBlock\n "]
    n000011CED78A2DE0 -> n000011CED78A2F00
    n000011CED78A2F00 -> n000011CED78A2C60
    n000011CED78A2D80 -> n000011CED78A2E40 [label="True" color="red"]
    n000011CED78A2E40 [label="ElseBlock\n OT: [ =( +( 1 ,  i) ,  i)]
"]
    n000011CED78A2EA0 [label="BreakBlock\n "]
    n000011CED78A2E40 -> n000011CED78A2EA0
    n000011CED78A2EA0 -> n000011CED78A2F00
	   n000011CED78A2C60 -> n000011CED78A2D20 [ label = "False" color="red"]
    n000011CED78A2D20 [label="WhileExitBlock\n "]
    n000011CED78A2D20 -> n000011CED78A2F60
}
