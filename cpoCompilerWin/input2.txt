class ExampleClass (X, Y) extends Example (int , int)

    
    public z as int

    public function ShowMessage() as int
       
       printf(1);
    end function
    public function DoThing() as int       
        printf(2);
    end function
end class
class Example (A, B)

    public x as A
    public y as B
    public function DoThing() as int       
       printf(3);

    end function
     public function DoOtherThing() as int       
       printf(4);

    end function
    

end class
function helper(n as int)
  dim ex as Example <int, int>
  dim ex_cl as ExampleClass <int, int>
  dim x as int
  ex.x = 5;
  x = ex_cl.ShowMessage();
  x = ex.x; 
  M(ex, n);
  x;
end function
function fib(n as int)
  dim ex as Example <int, int>
  dim ex_cl as ExampleClass <int, int>
  dim x as int
  ex.x = 5;
  x = ex.x; 
  M(ex, n);
  x;
end function
function M(O, n as int)
 printf(7);
end function
function error()
 printf(9);
end function
 
function printf(res as int)
    dim nextLine, revertedNum, tmp as int
    nextLine = 10;
    revertedNum = 0;   
    while res != 0 
        revertedNum = revertedNum * 10  ;
        tmp = res % 10;
        revertedNum= revertedNum + tmp;
        res = res / 10;
    wend
    while revertedNum != 0 
        tmp = revertedNum % 10;
        tmp=tmp + 48;
        print(tmp);
        revertedNum = revertedNum / 10;
    wend
    print(10);
end function
 
function main()
  dim i as int
  i = 0;
 while i < 5
     printf(helper(5));
     i = i + 1;
   wend
    
end function