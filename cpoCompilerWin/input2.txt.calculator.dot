digraph G {
ordering=out;
ranksep=.4;
bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

edge [arrowsize=.5, color="black", style="bold"]    n000011CE4EE215E0 [label="BaseBlock\n OT: [ =(10 , tmp1)]
OT: [ =(0 , tmp2)]
OT: [ scan(i)]
OT: [ =( -(48 , i) , sum)]
OT: [ scan(i)]
"]
    n000011CE4EE21640 [label="WhileBlock\n OT: [ !=(32 , i)]
"]
    n000011CE4EE215E0 -> n000011CE4EE21640
	   n000011CE4EE21640 -> n000011CE4EE216A0 [ label = "True" color="green"]
    n000011CE4EE216A0 [label="WhileBodyBlock\n OT: [ =( -(48 , i) , tmp1)]
OT: [ =( *(10 , tmp1) , tmp2)]
OT: [ =( +(tmp2 , sum) , sum)]
OT: [ scan(i)]
"]
    n000011CE4EE216A0 -> n000011CE4EE21640
	   n000011CE4EE21640 -> n000011CE4EE21700 [ label = "False" color="red"]
    n000011CE4EE21700 [label="WhileExitBlock\n OT: [ =(10 , tmp11)]
OT: [ =(0 , tmp21)]
OT: [ scan(i1)]
OT: [ =( -(48 , i1) , sum1)]
OT: [ scan(i1)]
"]
    n000011CE4EE21760 [label="WhileBlock\n OT: [ !=(32 , i1)]
"]
    n000011CE4EE21700 -> n000011CE4EE21760
	   n000011CE4EE21760 -> n000011CE4EE217C0 [ label = "True" color="green"]
    n000011CE4EE217C0 [label="WhileBodyBlock\n OT: [ =( -(48 , i1) , tmp11)]
OT: [ =( *(10 , tmp11) , tmp21)]
OT: [ =( +(tmp21 , sum1) , sum1)]
OT: [ scan(i1)]
"]
    n000011CE4EE217C0 -> n000011CE4EE21760
	   n000011CE4EE21760 -> n000011CE4EE21820 [ label = "False" color="red"]
    n000011CE4EE21820 [label="WhileExitBlock\n OT: [ scan(x)]
"]
    n000011CE4EE218E0 [label="IfBlock\n OT: [ ==(43 , x)]
"]
    n000011CE4EE21820 -> n000011CE4EE218E0
    n000011CE4EE218E0 -> n000011CE4EE21940 [label="True" color="green"]
    n000011CE4EE21940 [label="ThenBlock\n OT: [ =( +(sum1 , sum) , res)]
"]
    n000011CE4EE21E20 [label="IfExitBlock\n OT: [ print_value(res)]
"]
    n000011CE4EE21940 -> n000011CE4EE21E20
    n000011CE4EE21EE0 [label="BaseBlock\n "]
    n000011CE4EE21E20 -> n000011CE4EE21EE0
    n000011CE4EE218E0 -> n000011CE4EE219A0 [label="True" color="red"]
    n000011CE4EE219A0 [label="ElseBlock\n "]
    n000011CE4EE21A00 [label="IfBlock\n OT: [ ==(45 , x)]
"]
    n000011CE4EE219A0 -> n000011CE4EE21A00
    n000011CE4EE21A00 -> n000011CE4EE21A60 [label="True" color="green"]
    n000011CE4EE21A60 [label="ThenBlock\n OT: [ =( -(sum1 , sum) , res)]
"]
    n000011CE4EE21DC0 [label="IfExitBlock\n "]
    n000011CE4EE21A60 -> n000011CE4EE21DC0
    n000011CE4EE21DC0 -> n000011CE4EE21E20
    n000011CE4EE21A00 -> n000011CE4EE21AC0 [label="True" color="red"]
    n000011CE4EE21AC0 [label="ElseBlock\n "]
    n000011CE4EE21B20 [label="IfBlock\n OT: [ ==(47 , x)]
"]
    n000011CE4EE21AC0 -> n000011CE4EE21B20
    n000011CE4EE21B20 -> n000011CE4EE21B80 [label="True" color="green"]
    n000011CE4EE21B80 [label="ThenBlock\n OT: [ =( /(sum1 , sum) , res)]
"]
    n000011CE4EE21D60 [label="IfExitBlock\n "]
    n000011CE4EE21B80 -> n000011CE4EE21D60
    n000011CE4EE21D60 -> n000011CE4EE21DC0
    n000011CE4EE21B20 -> n000011CE4EE21BE0 [label="True" color="red"]
    n000011CE4EE21BE0 [label="ElseBlock\n "]
    n000011CE4EE21C40 [label="IfBlock\n OT: [ ==(42 , x)]
"]
    n000011CE4EE21BE0 -> n000011CE4EE21C40
    n000011CE4EE21C40 -> n000011CE4EE21CA0 [label="True" color="green"]
    n000011CE4EE21CA0 [label="ThenBlock\n OT: [ =( *(sum1 , sum) , res)]
"]
    n000011CE4EE21D00 [label="IfExitBlock\n "]
    n000011CE4EE21CA0 -> n000011CE4EE21D00
    n000011CE4EE21D00 -> n000011CE4EE21D60
}
